{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs';\nimport { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api/services\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../app.service\";\nimport * as i5 from \"../auth/auth.service\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i7 from \"@angular/common\";\nfunction AddNewComponent_ng_template_3_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.customerIdFromModal);\n  }\n}\nfunction AddNewComponent_ng_template_3_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r18.customerShortCodeFromTemplate);\n  }\n}\nfunction AddNewComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"h4\", 43);\n    i0.ɵɵtext(2, \"Add New Customer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function AddNewComponent_ng_template_3_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const modal_r15 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modal_r15.dismiss(\"Cross click\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 45)(5, \"form\", 46)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n    i0.ɵɵtext(9, \"Customer Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, AddNewComponent_ng_template_3_div_10_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementStart(11, \"div\", 8)(12, \"input\", 47, 48);\n    i0.ɵɵlistener(\"keyup\", function AddNewComponent_ng_template_3_Template_input_keyup_12_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const _r17 = i0.ɵɵreference(13);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.getModel(_r17.value, \"newCustomerType\"));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 5)(16, \"label\", 6);\n    i0.ɵɵtext(17, \"Email Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 8);\n    i0.ɵɵelement(19, \"input\", 49);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 6);\n    i0.ɵɵtext(22, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"textarea\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 4)(25, \"div\", 5)(26, \"label\", 6);\n    i0.ɵɵtext(27, \"Short Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(28, AddNewComponent_ng_template_3_div_28_Template, 2, 1, \"div\", 30);\n    i0.ɵɵelementStart(29, \"input\", 51, 52);\n    i0.ɵɵlistener(\"keyup\", function AddNewComponent_ng_template_3_Template_input_keyup_29_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const _r19 = i0.ɵɵreference(30);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.customerShortCodeExists(_r19.value));\n    });\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(31, \"div\", 53)(32, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function AddNewComponent_ng_template_3_Template_button_click_32_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const modal_r15 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modal_r15.close(\"Save click\"));\n    });\n    i0.ɵɵtext(33, \"Save\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r17 = i0.ɵɵreference(13);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.newCustomerForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerIdFromModal == ctx_r1.customerAlreadyExists && _r17.value != \"\");\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerShortCodeFromTemplate == ctx_r1.customerShortCodeAlreadyExists);\n  }\n}\nfunction AddNewComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.custIdFromTemplate);\n  }\n}\nfunction AddNewComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.prodIdFromTemplate);\n  }\n}\nfunction AddNewComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.ownerIdFromTemplate);\n  }\n}\nfunction AddNewComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r10.faultIdFromTemplate);\n  }\n}\nfunction AddNewComponent_div_75_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Document Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵtemplate(1, AddNewComponent_div_75_div_1_Template, 2, 0, \"div\", 57);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.getDocNo.errors == null ? null : ctx_r12.getDocNo.errors[\"required\"]);\n  }\n}\nfunction AddNewComponent_div_80_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Document Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewComponent_div_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵtemplate(1, AddNewComponent_div_80_div_1_Template, 2, 0, \"div\", 57);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.getDocDate.errors == null ? null : ctx_r13.getDocDate.errors[\"required\"]);\n  }\n}\nfunction AddNewComponent_div_95_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.formInvalid, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/product-detail\"];\n};\nconst _c1 = function () {\n  return [\"/owner-detail\"];\n};\nconst _c2 = function () {\n  return [\"/fault-detail\"];\n};\nconst _c3 = function () {\n  return [\"/\"];\n};\nexport class AddNewComponent {\n  constructor(fb, returnService, router, appService, userService, customerService, productService, faultService, ownerService, authService, modalService) {\n    this.fb = fb;\n    this.returnService = returnService;\n    this.router = router;\n    this.appService = appService;\n    this.userService = userService;\n    this.customerService = customerService;\n    this.productService = productService;\n    this.faultService = faultService;\n    this.ownerService = ownerService;\n    this.authService = authService;\n    this.modalService = modalService;\n    this.batchDateToggle = false;\n    this.closeResult = '';\n    this.customer = {};\n    this.product = {};\n    this.fault = {};\n    this.owner = {};\n    this.custIdFromTemplate = '';\n    this.prodIdFromTemplate = '';\n    this.faultIdFromTemplate = '';\n    this.ownerIdFromTemplate = '';\n    this.customerList = [];\n    this.productList = [];\n    this.faultList = [];\n    this.ownerList = [];\n    this.notFound = 'Not Found';\n    this.notLoaded = 'Not Loaded';\n    this.formInvalid = '';\n    this.userId = this.notLoaded;\n    this.custFormatter = customer => customer.customerName;\n    this.prodFormatter = product => product.productName;\n    this.faultFormatter = fault => fault.name;\n    this.ownerFormatter = owner => owner.firstName;\n    //Gets all customers for searchbox\n    this.searchCust = text$ => {\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.customerList.filter(customer => new RegExp(term, 'mi').test(customer.customerName)).slice(0, 10)));\n    };\n    //Gets all products for searchbox\n    this.searchProd = text$ => {\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.productList.filter(product => new RegExp(term, 'mi').test(product.productName)).slice(0, 10)));\n    };\n    //Gets all faults for searchbox\n    this.searchFault = text$ => {\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.faultList.filter(fault => new RegExp(term, 'mi').test(fault.name)).slice(0, 10)));\n    };\n    //Gets all owners for searchbox\n    this.searchOwner = text$ => {\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.ownerList.filter(owner => new RegExp(term, 'mi').test(owner.firstName)).slice(0, 10)));\n    };\n    this.getUserId = userId => {\n      this.userId = userId;\n    };\n    this.form = this.fb.group({\n      customer: ['', Validators.nullValidator],\n      product: ['', Validators.nullValidator],\n      qtyOnDoc: [0],\n      qtyReturned: [0],\n      batchDate: [],\n      owner: [''],\n      fault: [''],\n      docNo: ['', Validators.required],\n      docDate: [, Validators.required],\n      resolved: [],\n      comment: ['']\n    });\n    this.showToast = false;\n    this.message = 'Something went wrong';\n    this.handleError = err => {\n      if (err.status == 404) {\n        this.router.navigate(['/search-returns']);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status: \", err.statusText);\n      console.log(err);\n    };\n    //modals\n    //Modal Forms\n    this.newCustomerForm = this.fb.group({\n      customerName: [''],\n      email: [''],\n      address: [''],\n      shortCode: ['']\n    });\n    //customer Modal\n    //modal extensions\n    this.customerIdFromModal = '';\n    this.customerShortCodeFromTemplate = '';\n    this.customerAlreadyExists = 'Customer already exists';\n    this.customerShortCodeAlreadyExists = 'Short code already exists';\n  }\n  ngOnInit() {\n    this.userService.findUser({\n      email: this.authService.currentUser?.email\n    }).subscribe(u => {\n      this.getUserId(u.id);\n      console.log('The user id in the oninit subscribe call is: ' + this.userId);\n    });\n    this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError);\n    this.productService.searchProduct().subscribe(p => this.productList = p, this.handleError);\n    this.faultService.searchFault().subscribe(f => this.faultList = f, this.handleError);\n    this.ownerService.searchOwner().subscribe(o => this.ownerList = o, this.handleError);\n  }\n  //Gets the id and name of the model in the search criteria\n  getModel(modelName, type) {\n    let modelFound = [];\n    //Get the type of model\n    if (type == 'customerType') {\n      this.custIdFromTemplate = '';\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == modelName?.toLowerCase().trim());\n      if (customerFound.length > 0) {\n        customerFound.map(c => {\n          this.custIdFromTemplate = c.id;\n          this.customer.customerName = c.customerName;\n        });\n        console.log('Get model gets called- custIdfromTemplate: {' + this.custIdFromTemplate + '} model name: ' + modelName);\n      } else if (customerFound.length <= 0) {\n        this.custIdFromTemplate = this.notFound;\n      }\n    } else if (type == 'newCustomerType') {\n      this.customerIdFromModal = '';\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == modelName?.toLowerCase().trim());\n      if (customerFound.length > 0) {\n        this.customerIdFromModal = this.customerAlreadyExists;\n      }\n    }\n    if (type == 'productType') {\n      this.prodIdFromTemplate = '';\n      let productFound = this.productList.filter(p => p.productName?.toLowerCase().trim() == modelName?.toLowerCase().trim());\n      if (productFound.length > 0) {\n        productFound.map(p => {\n          this.prodIdFromTemplate = p.id;\n          this.product.productName = p.productName;\n        });\n      } else {\n        this.prodIdFromTemplate = this.notFound;\n      }\n    }\n    if (type == 'faultType') {\n      this.faultIdFromTemplate = '';\n      let faultFound = this.faultList.filter(f => f.name?.toLowerCase().trim() == modelName?.toLowerCase().trim());\n      if (faultFound.length > 0) {\n        faultFound.map(f => {\n          this.faultIdFromTemplate = f.id;\n          this.fault.name = f.name;\n        });\n      } else {\n        this.faultIdFromTemplate = this.notFound;\n      }\n    }\n    if (type == 'ownerType') {\n      this.ownerIdFromTemplate = '';\n      let ownerFound = this.ownerList.filter(o => o.firstName?.toLowerCase().trim() == modelName?.toLowerCase().trim());\n      if (ownerFound.length > 0) {\n        ownerFound.map(o => {\n          this.ownerIdFromTemplate = o.id;\n          this.owner.firstName = o.firstName;\n        });\n      } else {\n        this.ownerIdFromTemplate = this.notFound;\n      }\n    }\n  }\n  toggleBatch() {\n    this.batchDateToggle = !this.batchDateToggle;\n  }\n  save() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      console.log(\"Form is invalid\");\n      console.log(\"Customer valid?: \" + this.getCustomer.valid);\n      console.log(\"Product valid?: \" + this.getProduct.valid);\n      console.log(\"Fault valid?: \" + this.getFault.valid);\n      console.log(\"Owner valid?: \" + this.getOwner.valid);\n      console.log(\"User id is: \" + this.userId);\n      return;\n    }\n    this.message = 'Return Saved';\n    this.showToast = true;\n    const createdReturn = {\n      docDate: this.form.get('docDate')?.value,\n      customerId: this.custIdFromTemplate,\n      productId: this.prodIdFromTemplate,\n      qtyOnDoc: this.form.get('qtyOnDoc')?.value,\n      batchDate: this.form.get('batchDate')?.value,\n      ownerId: this.ownerIdFromTemplate,\n      faultId: this.faultIdFromTemplate,\n      docNo: this.form.get('docNo')?.value,\n      qtyReturned: this.form.get('qtyReturned')?.value,\n      resolved: JSON.parse(this.form.controls.resolved.value),\n      comment: this.form.get('comment')?.value,\n      userId: this.userId\n    };\n    this.returnService.createReturnReturn({\n      body: createdReturn\n    }).subscribe(_ => {\n      this.appService.setMessage(this.message);\n      this.appService.showToast(this.showToast);\n    }, this.handleError);\n    this.router.navigate(['/search-returns']);\n  }\n  //getters\n  get getDocDate() {\n    return this.form.controls.docDate;\n  }\n  get getCustomer() {\n    return this.form.controls.customer;\n  }\n  get getProduct() {\n    return this.form.controls.product;\n  }\n  get getQtyOnDoc() {\n    return this.form.controls.qtyOnDoc;\n  }\n  get getBatchDate() {\n    return this.form.controls.batchDate;\n  }\n  get getOwner() {\n    return this.form.controls.owner;\n  }\n  get getFault() {\n    return this.form.controls.fault;\n  }\n  get getDocNo() {\n    return this.form.controls.docNo;\n  }\n  get getQtyReturned() {\n    return this.form.controls.qtyReturned;\n  }\n  get getResolved() {\n    return this.form.controls.resolved;\n  }\n  get getComment() {\n    return this.form.controls.comment;\n  }\n  //\n  //customer Modal\n  openCustomerModal(content) {\n    this.newCustomerForm.reset();\n    this.customerIdFromModal = '';\n    this.customerShortCodeFromTemplate = '';\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title'\n    }).result.then(result => {\n      this.closeResult = `Closed with: ${result}`;\n      this.saveNewCustomer();\n    }, reason => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  getDismissReason(reason) {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  saveNewCustomer() {\n    if (this.customerIdFromModal == this.customerAlreadyExists || this.customerShortCodeFromTemplate == this.customerShortCodeAlreadyExists) {\n      return;\n    }\n    let newCustomer = {\n      customerName: this.newCustomerForm.controls.customerName.value,\n      email: this.newCustomerForm.controls.email.value,\n      address: this.newCustomerForm.controls.address.value,\n      shortCode: this.newCustomerForm.controls.shortCode.value\n    };\n    //console.log(newCustomer.customerName)\n    this.customerService.createCustomer({\n      body: newCustomer\n    }).subscribe(c => {\n      this.showToast = true;\n      if (this.form.valid) {\n        this.message = 'Customer added successfully';\n        console.log('Customer added successfully');\n        this.customerList = [];\n        this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError);\n        this.getCustomer.setValue(newCustomer.customerName);\n        this.getModel(newCustomer.customerName, 'newCustomerType');\n      } else if (this.form.valid && !this.form.touched && !this.form.dirty) {\n        this.message = 'Nothing added';\n        console.log('Nothing added');\n      }\n      //this.appService.setMessage(this.message);\n      //this.appService.showToast(this.showToast)\n    });\n\n    this.form.controls.customer.setValue(newCustomer.customerName);\n  }\n  customerExists(customerName) {\n    this.customerIdFromModal = '';\n    if (this.customer.customerName?.toLowerCase().trim() != customerName.toLowerCase().trim()) {\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == customerName.toLowerCase().trim());\n      if (customerFound.length > 0) {\n        this.customerIdFromModal = this.customerAlreadyExists;\n      }\n    }\n  }\n  customerShortCodeExists(shortCode) {\n    this.customerShortCodeFromTemplate = '';\n    if (this.customer.shortCode?.toLowerCase().trim() != shortCode.toLowerCase().trim()) {\n      let skuFound = this.customerList.filter(s => s.shortCode?.toLowerCase().trim() == shortCode.toLowerCase().trim());\n      if (skuFound.length > 0) {\n        this.customerShortCodeFromTemplate = this.customerShortCodeAlreadyExists;\n      }\n    }\n  }\n}\n_class = AddNewComponent;\n_class.ɵfac = function AddNewComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ReturnService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AppService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i2.FaultService), i0.ɵɵdirectiveInject(i2.OwnerService), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.NgbModal));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-new\"]],\n  decls: 104,\n  vars: 34,\n  consts: [[\"custContent\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"center\", \"shadow-custom\", \"mb-3\"], [1, \"container\"], [1, \"row\"], [1, \"mb-3\", \"col-12\"], [1, \"form-label\"], [\"class\", \"invalid-feedback d-block mb-3\", 4, \"ngIf\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"customer\", 1, \"form-control\", 3, \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"editable\", \"blur\"], [\"customerValue\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [\"type\", \"text\", \"formControlName\", \"product\", 1, \"form-control\", 3, \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"editable\", \"blur\"], [\"prodValue\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"routerLink\"], [1, \"mb-3\", \"col-6\"], [\"formControlName\", \"qtyOnDoc\", \"type\", \"number\", \"min\", \"0\", 1, \"form-control\"], [\"formControlName\", \"qtyReturned\", \"type\", \"number\", \"min\", \"0\", 1, \"form-control\"], [1, \"col-12\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\"], [1, \"me-3\"], [\"type\", \"checkbox\", 1, \"form-check-input\", \"mt-0\", 3, \"change\"], [\"batchChecked\", \"\"], [\"formControlName\", \"batchDate\", \"type\", \"date\", 1, \"form-control\", 3, \"readonly\"], [\"batchDateBox\", \"\"], [\"type\", \"text\", \"formControlName\", \"owner\", 1, \"form-control\", 3, \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"editable\", \"blur\"], [\"ownerValue\", \"\"], [\"type\", \"text\", \"formControlName\", \"fault\", 1, \"form-control\", 3, \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"editable\", \"blur\"], [\"faultValue\", \"\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [\"formControlName\", \"docNo\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"docDate\", \"type\", \"date\", 1, \"form-control\"], [\"formControlName\", \"resolved\", 1, \"form-select\"], [\"value\", \"true\"], [\"value\", \"false\"], [\"formControlName\", \"comment\", \"rows\", \"3\", \"maxlength\", \"255\", 1, \"form-control\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"button\", 1, \"btn-outline-danger\", \"btn\", \"col-6\", 3, \"routerLink\"], [1, \"fa\", \"fa-cancel\"], [\"type\", \"submit\", 1, \"btn-outline-success\", \"btn\", \"col-6\"], [1, \"fa\", \"fa-save\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"customerName\", 1, \"form-control\", 3, \"keyup\"], [\"customerModalValue\", \"\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"formControlName\", \"address\", \"rows\", \"3\", \"maxlength\", \"255\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"shortCode\", 1, \"form-control\", 3, \"keyup\"], [\"customerShortCodeValue\", \"\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", 3, \"click\"], [1, \"invalid-feedback\", \"d-block\", \"mb-3\"], [1, \"invalid-feedback\", \"d-block\"], [4, \"ngIf\"]],\n  template: function AddNewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r27 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Add New Return\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵtemplate(3, AddNewComponent_ng_template_3_Template, 34, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddNewComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"div\", 4)(9, \"div\", 5)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, AddNewComponent_div_14_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(15, \"div\", 8)(16, \"input\", 9, 10);\n      i0.ɵɵlistener(\"blur\", function AddNewComponent_Template_input_blur_16_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r3 = i0.ɵɵreference(17);\n        return i0.ɵɵresetView(ctx.getModel(_r3.value, \"customerType\"));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function AddNewComponent_Template_button_click_18_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.openCustomerModal(_r0));\n      });\n      i0.ɵɵtext(19, \"+\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\");\n      i0.ɵɵtext(21, \"customerValue\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(22, \"div\", 4)(23, \"div\", 5)(24, \"label\", 6);\n      i0.ɵɵtext(25, \"Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, AddNewComponent_div_26_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(27, \"div\", 8)(28, \"input\", 12, 13);\n      i0.ɵɵlistener(\"blur\", function AddNewComponent_Template_input_blur_28_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r5 = i0.ɵɵreference(29);\n        return i0.ɵɵresetView(ctx.getModel(_r5.value, \"productType\"));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 14);\n      i0.ɵɵtext(31, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(32, \"div\", 4)(33, \"div\", 15)(34, \"label\", 6);\n      i0.ɵɵtext(35, \"Qty on Document\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 15)(38, \"label\", 6);\n      i0.ɵɵtext(39, \"Qty Returned\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"input\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 4)(42, \"div\", 18)(43, \"div\", 19)(44, \"div\", 20)(45, \"span\", 21);\n      i0.ɵɵtext(46, \"No Batch Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"input\", 22, 23);\n      i0.ɵɵlistener(\"change\", function AddNewComponent_Template_input_change_47_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r7 = i0.ɵɵreference(50);\n        ctx.toggleBatch();\n        return i0.ɵɵresetView(_r7.value = \"\");\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(49, \"input\", 24, 25);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\", 4)(52, \"div\", 5)(53, \"label\", 6);\n      i0.ɵɵtext(54, \"Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(55, AddNewComponent_div_55_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(56, \"div\", 8)(57, \"input\", 26, 27);\n      i0.ɵɵlistener(\"blur\", function AddNewComponent_Template_input_blur_57_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r9 = i0.ɵɵreference(58);\n        return i0.ɵɵresetView(ctx.getModel(_r9.value, \"ownerType\"));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"button\", 14);\n      i0.ɵɵtext(60, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(61, \"div\", 4)(62, \"div\", 5)(63, \"label\", 6);\n      i0.ɵɵtext(64, \"Fault\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(65, AddNewComponent_div_65_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(66, \"div\", 8)(67, \"input\", 28, 29);\n      i0.ɵɵlistener(\"blur\", function AddNewComponent_Template_input_blur_67_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r11 = i0.ɵɵreference(68);\n        return i0.ɵɵresetView(ctx.getModel(_r11.value, \"faultType\"));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"button\", 14);\n      i0.ɵɵtext(70, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(71, \"div\", 4)(72, \"div\", 15)(73, \"label\", 6);\n      i0.ɵɵtext(74, \"External Document No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(75, AddNewComponent_div_75_Template, 2, 1, \"div\", 30);\n      i0.ɵɵelement(76, \"input\", 31);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(77, \"div\", 15)(78, \"label\", 6);\n      i0.ɵɵtext(79, \"Document Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(80, AddNewComponent_div_80_Template, 2, 1, \"div\", 30);\n      i0.ɵɵelement(81, \"input\", 32);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(82, \"div\", 4)(83, \"div\", 15)(84, \"label\", 6);\n      i0.ɵɵtext(85, \"Investigate / Resolved\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(86, \"select\", 33)(87, \"option\", 34);\n      i0.ɵɵtext(88, \"Resolved\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(89, \"option\", 35);\n      i0.ɵɵtext(90, \"Investigate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(91, \"div\", 5)(92, \"label\", 6);\n      i0.ɵɵtext(93, \"Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(94, \"textarea\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(95, AddNewComponent_div_95_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(96, \"div\", 4)(97, \"div\", 37)(98, \"button\", 38);\n      i0.ɵɵelement(99, \"i\", 39);\n      i0.ɵɵtext(100, \" Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(101, \"button\", 40);\n      i0.ɵɵelement(102, \"i\", 41);\n      i0.ɵɵtext(103, \" Save\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(17);\n      const _r5 = i0.ɵɵreference(29);\n      const _r6 = i0.ɵɵreference(48);\n      const _r9 = i0.ɵɵreference(58);\n      const _r11 = i0.ɵɵreference(68);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(ctx.custIdFromTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.custIdFromTemplate == ctx.notFound && _r3.value != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngbTypeahead\", ctx.searchCust)(\"inputFormatter\", ctx.custFormatter)(\"resultFormatter\", ctx.custFormatter)(\"editable\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.prodIdFromTemplate == \"Not Found\" && _r5.value != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngbTypeahead\", ctx.searchProd)(\"inputFormatter\", ctx.prodFormatter)(\"resultFormatter\", ctx.prodFormatter)(\"editable\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(30, _c0));\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"readonly\", _r6.checked == true ? true : false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.ownerIdFromTemplate == \"Not Found\" && _r9.value != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngbTypeahead\", ctx.searchOwner)(\"inputFormatter\", ctx.ownerFormatter)(\"resultFormatter\", ctx.ownerFormatter)(\"editable\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(31, _c1));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.faultIdFromTemplate == \"Not Found\" && _r11.value != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngbTypeahead\", ctx.searchFault)(\"inputFormatter\", ctx.faultFormatter)(\"resultFormatter\", ctx.faultFormatter)(\"editable\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(32, _c2));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.getDocNo.invalid && (ctx.getDocNo.touched || ctx.getDocNo.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.getDocDate.invalid && (ctx.getDocDate.touched || ctx.getDocDate.dirty));\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngIf\", ctx.formInvalid.length > 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(33, _c3));\n    }\n  },\n  dependencies: [i7.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink, i6.NgbTypeahead],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","debounceTime","distinctUntilChanged","filter","map","ModalDismissReasons","i0","AddNewComponent","constructor","fb","returnService","router","appService","userService","customerService","productService","faultService","ownerService","authService","modalService","notLoaded","customer","customerName","product","productName","fault","name","owner","firstName","text$","pipe","term","length","customerList","RegExp","test","slice","productList","faultList","ownerList","userId","group","nullValidator","qtyOnDoc","qtyReturned","batchDate","docNo","required","docDate","resolved","comment","err","status","navigate","console","log","statusText","email","address","shortCode","ngOnInit","findUser","currentUser","subscribe","u","getUserId","id","searchCustomer","c","handleError","searchProduct","p","searchFault","f","searchOwner","o","getModel","modelName","type","modelFound","custIdFromTemplate","customerFound","toLowerCase","trim","notFound","customerIdFromModal","customerAlreadyExists","prodIdFromTemplate","productFound","faultIdFromTemplate","faultFound","ownerIdFromTemplate","ownerFound","toggleBatch","batchDateToggle","save","form","invalid","markAllAsTouched","getCustomer","valid","getProduct","getFault","getOwner","message","showToast","createdReturn","get","value","customerId","productId","ownerId","faultId","JSON","parse","controls","createReturnReturn","body","_","setMessage","getDocDate","getQtyOnDoc","getBatchDate","getDocNo","getQtyReturned","getResolved","getComment","openCustomerModal","content","newCustomerForm","reset","customerShortCodeFromTemplate","open","ariaLabelledBy","result","then","closeResult","saveNewCustomer","reason","getDismissReason","ESC","BACKDROP_CLICK","customerShortCodeAlreadyExists","newCustomer","createCustomer","setValue","touched","dirty","customerExists","customerShortCodeExists","skuFound","s","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\add-new\\add-new.component.ts","C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\add-new\\add-new.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { debounceTime, distinctUntilChanged, filter, map, Observable, OperatorFunction } from 'rxjs';\r\nimport { CustomerRm, FaultRm, OwnerRm, ProductRm, ReturnDto, ReturnRm } from '../api/models';\r\nimport { CustomerService, FaultService, OwnerService, ProductService, ReturnService, UserService } from '../api/services';\r\nimport { AppService } from '../app.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\n@Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.css']\n})\nexport class AddNewComponent implements OnInit {\n\n  batchDateToggle = false;\n  closeResult = '';\n\n  constructor(private fb: FormBuilder, private returnService: ReturnService, private router: Router, private appService: AppService, private userService: UserService,\r\n    private customerService: CustomerService, private productService: ProductService, private faultService: FaultService, private ownerService: OwnerService,\n    private authService: AuthService, private modalService: NgbModal ) { }\n\n  customer: CustomerRm = {}\r\n  product: ProductRm = {}\r\n  fault: FaultRm = {}\r\n  owner: OwnerRm = {}\r\n  custIdFromTemplate = ''\r\n  prodIdFromTemplate = ''\r\n  faultIdFromTemplate = ''\r\n  ownerIdFromTemplate = ''\r\n\r\n  customerList: CustomerRm[] = []\r\n  productList: ProductRm[] = []\r\n  faultList: FaultRm[] = []\r\n  ownerList: OwnerRm[] = []\n\n  notFound = 'Not Found'\r\n  notLoaded = 'Not Loaded'\r\n  formInvalid = ''\n  userId = this.notLoaded\n\n  ngOnInit(): void {\n    this.userService.findUser({ email: this.authService.currentUser?.email! }).subscribe(u => {\r\n      this.getUserId(u.id!); console.log('The user id in the oninit subscribe call is: ' + this.userId)\r\n    })\n    this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError)\n    this.productService.searchProduct().subscribe(p => this.productList = p, this.handleError)\n    this.faultService.searchFault().subscribe(f => this.faultList = f, this.handleError)\n    this.ownerService.searchOwner().subscribe(o => this.ownerList = o, this.handleError)\n  }\n\n  custFormatter = (customer: CustomerRm) => customer.customerName!\r\n  prodFormatter = (product: ProductRm) => product.productName!\r\n  faultFormatter = (fault: FaultRm) => fault.name!\r\n  ownerFormatter = (owner: OwnerRm) => owner.firstName!\r\n\r\n  //Gets all customers for searchbox\r\n  searchCust: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.customerList.filter((customer) => new RegExp(term, 'mi').test(customer.customerName!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all products for searchbox\r\n  searchProd: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.productList.filter((product) => new RegExp(term, 'mi').test(product.productName!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all faults for searchbox\r\n  searchFault: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.faultList.filter((fault) => new RegExp(term, 'mi').test(fault.name!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all owners for searchbox\r\n  searchOwner: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.ownerList.filter((owner) => new RegExp(term, 'mi').test(owner.firstName!)).slice(0, 10))\r\n    );\r\n  }\r\n\n\n  private getUserId = (userId: string) => {\r\n    this.userId = userId\r\n  }\n\n  form = this.fb.group({\r\n    customer: ['', Validators.nullValidator],\r\n    product: ['', Validators.nullValidator],\r\n    qtyOnDoc: [0],\r\n    qtyReturned: [0],\r\n    batchDate: [],\r\n    owner: [''],\r\n    fault: [''],\r\n    docNo: ['', Validators.required],\r\n    docDate: [,Validators.required],\r\n    resolved: [],\r\n    comment: ['']\r\n  })\r\n\r\n  showToast = false;\r\n  message = 'Something went wrong'\r\n\r\n  //Gets the id and name of the model in the search criteria\r\n  getModel(modelName: string, type: string) {\r\n    let modelFound: any[] = []\r\n\r\n\r\n    //Get the type of model\r\n    if (type == 'customerType') {\r\n      this.custIdFromTemplate = ''\r\n\r\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == modelName?.toLowerCase().trim())\r\n      if (customerFound.length > 0) {\r\n        customerFound.map(c => { this.custIdFromTemplate = c.id!; this.customer.customerName = c.customerName! })\r\n        console.log('Get model gets called- custIdfromTemplate: {' + this.custIdFromTemplate + '} model name: ' + modelName)\r\n      }\r\n      else if (customerFound.length <= 0) {\r\n        this.custIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n    else if (type == 'newCustomerType') {\r\n      this.customerIdFromModal = ''\r\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == modelName?.toLowerCase().trim())\r\n\r\n      if (customerFound.length > 0) {\r\n        this.customerIdFromModal = this.customerAlreadyExists\r\n      }  \r\n    }\r\n\r\n    if (type == 'productType') {\r\n      this.prodIdFromTemplate = ''\r\n      let productFound = this.productList.filter(p => p.productName?.toLowerCase().trim() == modelName?.toLowerCase().trim())\r\n      if (productFound.length > 0) {\r\n        productFound.map(p => { this.prodIdFromTemplate = p.id!; this.product.productName = p.productName! })\r\n      }\r\n      else {\r\n        this.prodIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n    if (type == 'faultType') {\r\n      this.faultIdFromTemplate = ''\r\n      let faultFound = this.faultList.filter(f => f.name?.toLowerCase().trim() == modelName?.toLowerCase().trim())\r\n      if (faultFound.length > 0) {\r\n        faultFound.map(f => { this.faultIdFromTemplate = f.id!; this.fault.name = f.name! })\r\n      }\r\n      else {\r\n        this.faultIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n    if (type == 'ownerType') {\r\n      this.ownerIdFromTemplate = ''\r\n      let ownerFound = this.ownerList.filter(o => o.firstName?.toLowerCase().trim() == modelName?.toLowerCase().trim())\r\n      if (ownerFound.length > 0) {\r\n        ownerFound.map(o => { this.ownerIdFromTemplate = o.id!; this.owner.firstName = o.firstName! })\r\n      }\r\n      else {\r\n        this.ownerIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n\r\n\r\n  }\n\n  toggleBatch() {\n    this.batchDateToggle = !this.batchDateToggle;\r\n  }\n\n  save() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched()\r\n      console.log(\"Form is invalid\")\r\n      console.log(\"Customer valid?: \" + this.getCustomer.valid)\r\n      console.log(\"Product valid?: \" + this.getProduct.valid)\r\n      console.log(\"Fault valid?: \" + this.getFault.valid)\r\n      console.log(\"Owner valid?: \" + this.getOwner.valid)\r\n      console.log(\"User id is: \" + this.userId)\r\n      return\r\n    }\r\n\r\n    this.message = 'Return Saved'\r\n    this.showToast = true\r\n\r\n    const createdReturn: ReturnDto = {\r\n      docDate: this.form.get('docDate')?.value!,\r\n      customerId: this.custIdFromTemplate,\r\n      productId: this.prodIdFromTemplate,\r\n      qtyOnDoc: this.form.get('qtyOnDoc')?.value!,\r\n      batchDate: this.form.get('batchDate')?.value!,\r\n      ownerId: this.ownerIdFromTemplate,\r\n      faultId: this.faultIdFromTemplate,\r\n      docNo: this.form.get('docNo')?.value!,\r\n      qtyReturned: this.form.get('qtyReturned')?.value!,\r\n      resolved: JSON.parse(this.form.controls.resolved.value!),\r\n      comment: this.form.get('comment')?.value!,\r\n      userId: this.userId!\r\n    }\r\n\r\n\r\n\r\n    this.returnService.createReturnReturn({ body: createdReturn }).subscribe(_ => { this.appService.setMessage(this.message); this.appService.showToast(this.showToast) }, this.handleError)\r\n    this.router.navigate(['/search-returns'])\r\n  }\n\n  private handleError = (err: any) => {\r\n\r\n    if (err.status == 404) {\r\n      this.router.navigate(['/search-returns'])\r\n    }\r\n\r\n    console.log(\"Response Error. Status: \", err.status)\r\n    console.log(\"Response Error. Status: \", err.statusText)\r\n    console.log(err);\r\n  }\n\n  //getters\r\n  get getDocDate() {\r\n    return this.form.controls.docDate\r\n  }\r\n\r\n  get getCustomer() {\r\n    return this.form.controls.customer\r\n  }\r\n\r\n  get getProduct() {\r\n    return this.form.controls.product\r\n  }\r\n\r\n  get getQtyOnDoc() {\r\n    return this.form.controls.qtyOnDoc\r\n  }\r\n\r\n  get getBatchDate() {\r\n    return this.form.controls.batchDate\r\n  }\r\n\r\n  get getOwner() {\r\n    return this.form.controls.owner\r\n  }\r\n\r\n  get getFault() {\r\n    return this.form.controls.fault\r\n  }\r\n\r\n  get getDocNo() {\r\n    return this.form.controls.docNo\r\n  }\r\n\r\n  get getQtyReturned() {\r\n    return this.form.controls.qtyReturned\r\n  }\r\n\r\n  get getResolved() {\r\n    return this.form.controls.resolved\r\n  }\r\n\r\n  get getComment() {\r\n    return this.form.controls.comment\r\n  }\r\n\r\n  //modals\r\n\r\n  //Modal Forms\r\n  newCustomerForm = this.fb.group({\n    customerName: [''],\n    email: [''],\n    address: [''],\n    shortCode: [''],\n  })\r\n  //\r\n    //customer Modal\r\n  openCustomerModal(content: any) {\r\n    this.newCustomerForm.reset()\r\n    this.customerIdFromModal = ''\r\n    this.customerShortCodeFromTemplate = ''\r\n\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then(\r\n      (result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n        this.saveNewCustomer()\r\n      },\r\n      (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      },\r\n    );\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n    //customer Modal\r\n  //modal extensions\r\n  customerIdFromModal = ''\r\n  customerShortCodeFromTemplate = ''\r\n  customerAlreadyExists = 'Customer already exists'\r\n  customerShortCodeAlreadyExists = 'Short code already exists'\r\n\r\n\n  saveNewCustomer(): void {\n    if (this.customerIdFromModal == this.customerAlreadyExists || this.customerShortCodeFromTemplate == this.customerShortCodeAlreadyExists) {\n      return\n    }\n\n    let newCustomer: CustomerRm = {\n      customerName: this.newCustomerForm.controls.customerName.value,\n      email: this.newCustomerForm.controls.email.value,\n      address: this.newCustomerForm.controls.address.value,\n      shortCode: this.newCustomerForm.controls.shortCode.value\n    }\n    //console.log(newCustomer.customerName)\n\n    this.customerService.createCustomer({ body: newCustomer }).subscribe(c => {\n      this.showToast = true\n      if (this.form.valid) {\n        this.message = 'Customer added successfully'\n        console.log('Customer added successfully')\n        this.customerList = []\n        this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError)\n        this.getCustomer.setValue(newCustomer.customerName!)\n        this.getModel(newCustomer.customerName!,'newCustomerType')\n      }\n      else if (this.form.valid && !this.form.touched && !this.form.dirty) {\n        this.message = 'Nothing added'\n        console.log('Nothing added')\n      }\n      //this.appService.setMessage(this.message);\n      //this.appService.showToast(this.showToast)\n      \n    })\n\n    this.form.controls.customer.setValue(newCustomer.customerName!)\n\n  }\r\n\r\n  customerExists(customerName: string) {\n    this.customerIdFromModal = ''\n    if (this.customer.customerName?.toLowerCase().trim() != customerName.toLowerCase().trim()) {\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == customerName.toLowerCase().trim())\n      if (customerFound.length > 0) {\n        this.customerIdFromModal = this.customerAlreadyExists\n      }\n    }\n  }\n\n  customerShortCodeExists(shortCode: string) {\n    this.customerShortCodeFromTemplate = ''\n    if (this.customer.shortCode?.toLowerCase().trim() != shortCode.toLowerCase().trim()) {\n      let skuFound = this.customerList.filter(s => s.shortCode?.toLowerCase().trim() == shortCode.toLowerCase().trim())\n      if (skuFound.length > 0) {\n        this.customerShortCodeFromTemplate = this.customerShortCodeAlreadyExists\n      }\n    }\n  }\r\n}\n\n","<h2>Add New Return</h2>\r\n<hr />\r\n\r\n<!--Modals-->\r\n<ng-template #custContent let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add New Customer</h4>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"newCustomerForm\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Customer Name</label>\r\n          <div *ngIf=\"customerIdFromModal == customerAlreadyExists && customerModalValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{customerIdFromModal}}</div>\r\n          <div class=\"input-group\">\r\n            <input #customerModalValue\r\n                   type=\"text\"\r\n                   class=\"form-control\"\r\n                   formControlName=\"customerName\"\r\n                   (keyup)=\"getModel(customerModalValue.value, 'newCustomerType')\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Email Address</label>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\"\r\n                   class=\"form-control\"\r\n                   formControlName=\"email\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3 col-12\">\r\n        <label class=\"form-label\">Address</label>\r\n        <textarea formControlName=\"address\"\r\n                  class=\"form-control\" rows=\"3\"\r\n                  maxlength=\"255\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Short Code</label>\r\n          <div *ngIf=\"customerShortCodeFromTemplate == customerShortCodeAlreadyExists\" class=\"invalid-feedback d-block\">{{customerShortCodeFromTemplate}}</div>\r\n          <input #customerShortCodeValue\r\n                 type=\"text\"\r\n                 class=\"form-control\"\r\n                 formControlName=\"shortCode\"\r\n                 (keyup)=\"customerShortCodeExists(customerShortCodeValue.value)\">\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Save</button>\r\n  </div>\r\n</ng-template>\r\n<!--Modals-->\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\r\n \r\n  <div class=\"center shadow-custom mb-3\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Customer</label>\r\n          <div>{{custIdFromTemplate}}</div>\r\n          <div *ngIf=\"custIdFromTemplate == notFound && customerValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{custIdFromTemplate}}</div>\r\n          <div class=\"input-group\">\r\n            <input #customerValue\r\n                   type=\"text\"\r\n                   class=\"form-control\"\r\n                   [ngbTypeahead]=\"searchCust\"\r\n                   [inputFormatter]=\"custFormatter\"\r\n                   [resultFormatter]=\"custFormatter\"\r\n                   [editable]=\"true\"\r\n                   formControlName=\"customer\"\r\n                   (blur)=\"getModel(customerValue.value, 'customerType')\" />\r\n            <button class=\"btn btn-outline-secondary\" (click)=\"openCustomerModal(custContent)\" type=\"button\">+</button>\r\n            <div>customerValue</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Product</label>\r\n          <div *ngIf=\"prodIdFromTemplate == 'Not Found' && prodValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{prodIdFromTemplate}}</div>\r\n          <div class=\"input-group\">\r\n            <input #prodValue\r\n                   type=\"text\"\r\n                   class=\"form-control\"\r\n                   [ngbTypeahead]=\"searchProd\"\r\n                   [inputFormatter]=\"prodFormatter\"\r\n                   [resultFormatter]=\"prodFormatter\"\r\n                   [editable]=\"false\"\r\n                   formControlName=\"product\"\r\n                   (blur)=\"getModel(prodValue.value, 'productType')\" />\r\n            <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/product-detail']\" type=\"button\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">Qty on Document</label>\r\n          <input formControlName=\"qtyOnDoc\" type=\"number\" min=\"0\" class=\"form-control\">\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">Qty Returned</label>\r\n          <input formControlName=\"qtyReturned\" type=\"number\" min=\"0\" class=\"form-control\">\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-text\">\r\n              <span class=\"me-3\">No Batch Date</span>\r\n              <input class=\"form-check-input mt-0\" type=\"checkbox\" #batchChecked (change)=\"toggleBatch(); batchDateBox.value = ''\">\r\n            </div>\r\n            <input formControlName=\"batchDate\" type=\"date\" #batchDateBox [readonly]=\"batchChecked.checked == true ? true : false\" class=\"form-control\">\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-12\">\r\n            <label class=\"form-label\">Owner</label>\r\n            <div *ngIf=\"ownerIdFromTemplate == 'Not Found' && ownerValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{ownerIdFromTemplate}}</div>\r\n            <div class=\"input-group\">\r\n              <input #ownerValue\r\n                     type=\"text\"\r\n                     class=\"form-control\"\r\n                     [ngbTypeahead]=\"searchOwner\"\r\n                     [inputFormatter]=\"ownerFormatter\"\r\n                     [resultFormatter]=\"ownerFormatter\"\r\n                     [editable]=\"false\"\r\n                     formControlName=\"owner\"\r\n                     (blur)=\"getModel(ownerValue.value, 'ownerType')\" />\r\n              <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/owner-detail']\" type=\"button\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-12\">\r\n            <label class=\"form-label\">Fault</label>\r\n            <div *ngIf=\"faultIdFromTemplate == 'Not Found' && faultValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{faultIdFromTemplate}}</div>\r\n            <div class=\"input-group\">\r\n              <input #faultValue\r\n                     type=\"text\"\r\n                     class=\"form-control\"\r\n                     [ngbTypeahead]=\"searchFault\"\r\n                     [inputFormatter]=\"faultFormatter\"\r\n                     [resultFormatter]=\"faultFormatter\"\r\n                     [editable]=\"false\"\r\n                     formControlName=\"fault\"\r\n                     (blur)=\"getModel(faultValue.value, 'faultType')\" />\r\n              <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/fault-detail']\" type=\"button\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">External Document No.</label>\r\n            <div *ngIf=\"getDocNo.invalid && (getDocNo.touched || getDocNo.dirty)\" class=\"invalid-feedback d-block\">\r\n              <div *ngIf=\"getDocNo.errors?.['required']\">Document Number is required</div>\r\n            </div>\r\n            <input formControlName=\"docNo\" type=\"text\" class=\"form-control\">\r\n          </div>\r\n\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">Document Date</label>\r\n            <div *ngIf=\"getDocDate.invalid && (getDocDate.touched || getDocDate.dirty)\" class=\"invalid-feedback d-block\">\r\n              <div *ngIf=\"getDocDate.errors?.['required']\">Document Date is required</div>\r\n            </div>\r\n            <input formControlName=\"docDate\" type=\"date\" class=\"form-control\">\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">Investigate / Resolved</label>\r\n            <select formControlName=\"resolved\" class=\"form-select\">\r\n              <option value=true>Resolved</option>\r\n              <option value=false>Investigate</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Comment</label>\r\n          <textarea formControlName=\"comment\" class=\"form-control\" rows=\"3\" maxlength=\"255\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"invalid-feedback d-block mb-3\" *ngIf=\"formInvalid.length > 0\">\r\n          {{formInvalid}}\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 mb-3\">\r\n            <button type=\"button\" [routerLink]=\"['/']\" class=\"btn-outline-danger btn col-6\"><i class=\"fa fa-cancel\"></i> Cancel</button>\r\n            <button type=\"submit\" class=\"btn-outline-success btn col-6\"><i class=\"fa fa-save\"></i> Save</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}