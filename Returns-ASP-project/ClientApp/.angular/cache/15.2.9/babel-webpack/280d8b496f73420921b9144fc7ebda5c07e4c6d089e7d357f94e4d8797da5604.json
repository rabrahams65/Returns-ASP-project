{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../app.service\";\nconst _c0 = function () {\n  return [\"/owners\"];\n};\nexport class OwnerDetailComponent {\n  constructor(ownerService, activatedRoute, fb, router, appService) {\n    this.ownerService = ownerService;\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.router = router;\n    this.appService = appService;\n    this.ownerId = '';\n    this.owner = {};\n    this.message = 'Something went wrong...';\n    this.showToast = false;\n    this.form = this.fb.group({\n      firstName: [''],\n      lastName: ['']\n    });\n    this.findOwner = faultId => {\n      this.ownerService.findOwner({\n        id: faultId\n      }).subscribe(o => {\n        this.owner = o;\n        this.form.controls.firstName.setValue(o.firstName);\n        this.form.controls.lastName.setValue(o.lastName);\n      });\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(f => this.findOwner(f.get(\"ownerId\")));\n  }\n  update() {\n    console.log('First Name: ' + this.getFormFirstName.value);\n    console.log('Last Name: ' + this.getFormLastName.value);\n    let editedOwner = {\n      id: this.owner.id,\n      firstName: this.getFormFirstName.value,\n      lastName: this.getFormLastName.value\n    };\n    this.ownerService.updateOwner({\n      id: this.owner.id,\n      body: editedOwner\n    }).subscribe(() => {\n      this.ownerService.findOwner({\n        id: editedOwner.id\n      }).subscribe(o => {\n        if (o.id == editedOwner.id && o.firstName == editedOwner.firstName && o.lastName == editedOwner.lastName) {\n          this.showToast = true;\n          if (this.form.valid) {\n            this.message = 'Owner updated successfully';\n          } else if (this.form.valid && !this.form.touched && !this.form.dirty) {\n            this.message = 'Nothing updated';\n          }\n          this.appService.setMessage(this.message);\n          this.appService.showToast(this.showToast);\n          this.router.navigate(['/owners']);\n        }\n      });\n    });\n    //this.router.navigate(['/owners'])\n  }\n  //getters\n  get getFormFirstName() {\n    return this.form.controls.firstName;\n  }\n  get getFormLastName() {\n    return this.form.controls.lastName;\n  }\n}\n_class = OwnerDetailComponent;\n_class.ɵfac = function OwnerDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.OwnerService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.AppService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-owner-detail\"]],\n  decls: 25,\n  vars: 3,\n  consts: [[1, \"center\", \"shadow-custom\", \"mb-3\"], [1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"mb-3\", \"col-12\"], [1, \"form-label\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"button\", 1, \"btn-outline-danger\", \"btn\", \"col-6\", 3, \"routerLink\"], [1, \"fa\", \"fa-cancel\"], [\"type\", \"submit\", 1, \"btn-outline-success\", \"btn\", \"col-6\"], [1, \"fa\", \"fa-save\"]],\n  template: function OwnerDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Edit Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function OwnerDetailComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"div\", 4)(14, \"label\", 5);\n      i0.ɵɵtext(15, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"div\", 9)(19, \"button\", 10);\n      i0.ɵɵelement(20, \"i\", 11);\n      i0.ɵɵtext(21, \" Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 12);\n      i0.ɵɵelement(23, \"i\", 13);\n      i0.ɵɵtext(24, \" Save\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["OwnerDetailComponent","constructor","ownerService","activatedRoute","fb","router","appService","group","firstName","lastName","faultId","findOwner","id","subscribe","o","owner","form","controls","setValue","ngOnInit","paramMap","f","get","update","console","log","getFormFirstName","value","getFormLastName","editedOwner","updateOwner","body","showToast","valid","message","touched","dirty","setMessage","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\owner-detail\\owner-detail.component.ts","C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\owner-detail\\owner-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { OwnerRm } from '../api/models';\r\nimport { OwnerService } from '../api/services';\r\nimport { AppService } from '../app.service';\r\n\n@Component({\n  selector: 'app-owner-detail',\n  templateUrl: './owner-detail.component.html',\n  styleUrls: ['./owner-detail.component.css']\n})\nexport class OwnerDetailComponent implements OnInit {\n\n  constructor(private ownerService: OwnerService, private activatedRoute: ActivatedRoute, private fb: FormBuilder,\n              private router: Router, private appService: AppService) { }\n\n  ownerId = ''\n  owner: OwnerRm = {}\n  message = 'Something went wrong...'\n  showToast = false;\n\n  form = this.fb.group({\n    firstName: [''],\n    lastName: ['']\n  })\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(f => this.findOwner(f.get(\"ownerId\")))\n\n  }\n\n  findOwner = (faultId: string | null) => {\n    this.ownerService.findOwner({ id: faultId! }).subscribe(o =>\r\n    {\r\n      this.owner = o\r\n      this.form.controls.firstName.setValue(o.firstName!)\n      this.form.controls.lastName.setValue(o.lastName!)\r\n    })\r\n\r\n  }\n\n  update() {\n    console.log('First Name: ' + this.getFormFirstName.value)\r\n    console.log('Last Name: ' + this.getFormLastName.value)\r\n\r\n    let editedOwner: OwnerRm = {\r\n      id: this.owner.id,\r\n      firstName: this.getFormFirstName.value,\r\n      lastName: this.getFormLastName.value\r\n    } \r\n\r\n    this.ownerService.updateOwner({ id: this.owner.id!, body: editedOwner }).subscribe(() => {\r\n      this.ownerService.findOwner({ id: editedOwner.id! }).subscribe(o => {\r\n        if (o.id == editedOwner.id && o.firstName == editedOwner.firstName && o.lastName == editedOwner.lastName) {\r\n          this.showToast = true\r\n          if (this.form.valid) {\r\n            this.message = 'Owner updated successfully'\r\n          }\r\n          else if (this.form.valid && !this.form.touched && !this.form.dirty) {\r\n            this.message = 'Nothing updated'\r\n          }\r\n          this.appService.setMessage(this.message);\r\n          this.appService.showToast(this.showToast)\r\n          this.router.navigate(['/owners'])\r\n        }\r\n      })\r\n\r\n    })\r\n\r\n   \r\n    \r\n    //this.router.navigate(['/owners'])\r\n  }\n\n  //getters\n  get getFormFirstName() {\n    return this.form.controls.firstName\r\n  }\n\n  get getFormLastName() {\n    return this.form.controls.lastName\r\n  }\n\n}\n","<h3>Edit Owner</h3>\r\n<hr />\r\n\r\n<div class=\"center shadow-custom mb-3\">\r\n  <div class=\"container\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"update()\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">First Name</label>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\"\r\n                   class=\"form-control\"\r\n                   formControlName=\"firstName\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Last Name</label>\r\n          <input type=\"text\"\r\n                 class=\"form-control\"\r\n                 formControlName=\"lastName\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 mb-3\">\r\n          <button type=\"button\" [routerLink]=\"['/owners']\" class=\"btn-outline-danger btn col-6\"><i class=\"fa fa-cancel\"></i> Cancel</button>\r\n          <button type=\"submit\" class=\"btn-outline-success btn col-6\"><i class=\"fa fa-save\"></i> Save</button>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}