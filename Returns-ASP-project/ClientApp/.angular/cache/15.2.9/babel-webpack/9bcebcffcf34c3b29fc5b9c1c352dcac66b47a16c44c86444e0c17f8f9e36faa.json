{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/faults\"];\n};\nexport class FaultDetailComponent {\n  constructor(faultService, activatedRoute, fb, router) {\n    this.faultService = faultService;\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.router = router;\n    this.faultId = '';\n    this.fault = {};\n    this.showToast = false;\n    this.message = '';\n    this.form = this.fb.group({\n      faultName: [''],\n      description: ['']\n    });\n    this.findFault = faultId => {\n      this.faultService.findFault({\n        id: faultId\n      }).subscribe(f => {\n        this.fault = f;\n        this.form.controls.faultName.setValue(f.name);\n        this.form.controls.description.setValue(f.description);\n      });\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(p => this.findFault(p.get(\"faultId\")));\n  }\n  update() {\n    let editedFault = {\n      id: this.fault.id,\n      name: this.form.controls.faultName.value,\n      description: this.form.controls.description.value\n    };\n    console.log('Fault Name: ' + this.form.controls.faultName.value);\n    console.log('Description: ' + this.form.controls.description.value);\n    this.faultService.updateFault({\n      id: this.fault.id,\n      body: editedFault\n    }).subscribe(() => {\n      this.faultService.findFault({\n        id: this.faultId\n      }).subscribe(f => {\n        console.log('Fault Name: ' + f.name);\n        console.log('Description: ' + f.description);\n        if (f.id == editedFault.id && f.name == editedFault.name && f.description == editedFault.description) {\n          this.showToast = true;\n          if (this.form.valid) {\n            this.message = 'Fault updated successfully';\n            console.log('Fault updated successfully');\n          } else if (this.form.valid && !this.form.touched && !this.form.dirty) {\n            this.message = 'Nothing updated';\n            console.log('Nothing updated');\n          }\n          //this.appService.setMessage(this.message);\n          //this.appService.showToast(this.showToast)\n        }\n\n        this.router.navigate(['/faults']);\n      });\n    });\n  }\n}\n_class = FaultDetailComponent;\n_class.ɵfac = function FaultDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FaultService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-fault-detail\"]],\n  decls: 24,\n  vars: 3,\n  consts: [[1, \"center\", \"shadow-custom\", \"mb-3\"], [1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"mb-3\", \"col-12\"], [1, \"form-label\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"faultName\", 1, \"form-control\"], [\"formControlName\", \"description\", \"rows\", \"3\", \"maxlength\", \"255\", 1, \"form-control\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"button\", 1, \"btn-outline-danger\", \"btn\", \"col-6\", 3, \"routerLink\"], [1, \"fa\", \"fa-cancel\"], [\"type\", \"submit\", 1, \"btn-outline-success\", \"btn\", \"col-6\"], [1, \"fa\", \"fa-save\"]],\n  template: function FaultDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Edit Fault\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function FaultDetailComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Fault Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"textarea\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 3)(17, \"div\", 9)(18, \"button\", 10);\n      i0.ɵɵelement(19, \"i\", 11);\n      i0.ɵɵtext(20, \" Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 12);\n      i0.ɵɵelement(22, \"i\", 13);\n      i0.ɵɵtext(23, \" Save\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MaxLengthValidator, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FaultDetailComponent","constructor","faultService","activatedRoute","fb","router","group","faultName","description","faultId","findFault","id","subscribe","f","fault","form","controls","setValue","name","ngOnInit","paramMap","p","get","update","editedFault","value","console","log","updateFault","body","showToast","valid","message","touched","dirty","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\fault-detail\\fault-detail.component.ts","C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\fault-detail\\fault-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FaultRm } from '../api/models';\r\nimport { FaultService } from '../api/services';\r\n\n@Component({\n  selector: 'app-fault-detail',\n  templateUrl: './fault-detail.component.html',\n  styleUrls: ['./fault-detail.component.css']\n})\nexport class FaultDetailComponent implements OnInit {\n\n  constructor(private faultService: FaultService, private activatedRoute: ActivatedRoute, private fb: FormBuilder,\n              private router: Router) { }\n  faultId = ''\n  fault: FaultRm = {}\n  showToast = false\n  message = ''\n\n  form = this.fb.group({\n    faultName: [''],\r\n    description: ['']\r\n  })\n\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(p => this.findFault(p.get(\"faultId\")))\n  }\n\n  findFault = (faultId: string | null) => {\n    this.faultService.findFault({ id: faultId! }).subscribe(f => {\r\n      this.fault = f;\r\n      this.form.controls.faultName.setValue(f.name!)\r\n      this.form.controls.description.setValue(f.description!)\r\n    })\r\n  }\n\n  update() {\r\n    let editedFault: FaultRm = {\r\n      id: this.fault.id,\r\n      name: this.form.controls.faultName.value,\r\n      description: this.form.controls.description.value\r\n    }\r\n\r\n    console.log('Fault Name: ' + this.form.controls.faultName.value)\r\n    console.log('Description: ' + this.form.controls.description.value)\r\n\r\n    this.faultService.updateFault({ id: this.fault.id!, body: editedFault }).subscribe(() => {\r\n      this.faultService.findFault({ id: this.faultId! }).subscribe(f => {\r\n        console.log('Fault Name: ' + f.name)\r\n        console.log('Description: ' + f.description)\r\n\r\n        if (f.id == editedFault.id && f.name == editedFault.name && f.description == editedFault.description) {\r\n          this.showToast = true\r\n          if (this.form.valid) {\r\n            this.message = 'Fault updated successfully'\r\n            console.log('Fault updated successfully')\r\n          }\r\n          else if (this.form.valid && !this.form.touched && !this.form.dirty) {\r\n            this.message = 'Nothing updated'\r\n            console.log('Nothing updated')\r\n          }\r\n          //this.appService.setMessage(this.message);\r\n          //this.appService.showToast(this.showToast)\r\n         \r\n        }\r\n\r\n        this.router.navigate(['/faults'])\r\n      })\r\n    })\r\n  }\n\n}\n","<h3>Edit Fault</h3>\r\n<hr />\r\n\r\n<div class=\"center shadow-custom mb-3\">\r\n  <div class=\"container\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"update()\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Fault Name</label>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\"\r\n                   class=\"form-control\"\r\n                   formControlName=\"faultName\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3 col-12\">\r\n        <label class=\"form-label\">Description</label>\r\n        <textarea formControlName=\"description\"\r\n                  class=\"form-control\" rows=\"3\"\r\n                  maxlength=\"255\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 mb-3\">\r\n          <button type=\"button\" [routerLink]=\"['/faults']\" class=\"btn-outline-danger btn col-6\"><i class=\"fa fa-cancel\"></i> Cancel</button>\r\n          <button type=\"submit\" class=\"btn-outline-success btn col-6\"><i class=\"fa fa-save\"></i> Save</button>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}