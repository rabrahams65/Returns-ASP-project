{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs';\nimport { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api/services\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../app.service\";\nimport * as i5 from \"../auth/auth.service\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i7 from \"@angular/common\";\nfunction AddNewComponent_ng_template_3_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.customerIdFromTemplate);\n  }\n}\nfunction AddNewComponent_ng_template_3_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r18.customerShortCodeFromTemplate);\n  }\n}\nfunction AddNewComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"h4\", 43);\n    i0.ɵɵtext(2, \"Add New Customer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function AddNewComponent_ng_template_3_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const modal_r15 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modal_r15.dismiss(\"Cross click\"));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 45)(5, \"form\", 46)(6, \"div\", 4)(7, \"div\", 5)(8, \"label\", 6);\n    i0.ɵɵtext(9, \"Customer Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, AddNewComponent_ng_template_3_div_10_Template, 2, 1, \"div\", 30);\n    i0.ɵɵelementStart(11, \"div\", 8)(12, \"input\", 47, 48);\n    i0.ɵɵlistener(\"keyup\", function AddNewComponent_ng_template_3_Template_input_keyup_12_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const _r17 = i0.ɵɵreference(13);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.customerExists(_r17.value));\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 5)(16, \"label\", 6);\n    i0.ɵɵtext(17, \"Email Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 8);\n    i0.ɵɵelement(19, \"input\", 49);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\", 6);\n    i0.ɵɵtext(22, \"Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"textarea\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 4)(25, \"div\", 5)(26, \"label\", 6);\n    i0.ɵɵtext(27, \"Short Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(28, AddNewComponent_ng_template_3_div_28_Template, 2, 1, \"div\", 30);\n    i0.ɵɵelementStart(29, \"input\", 51, 52);\n    i0.ɵɵlistener(\"keyup\", function AddNewComponent_ng_template_3_Template_input_keyup_29_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const _r19 = i0.ɵɵreference(30);\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.customerShortCodeExists(_r19.value));\n    });\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(31, \"div\", 53)(32, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function AddNewComponent_ng_template_3_Template_button_click_32_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const modal_r15 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(modal_r15.close(\"Save click\"));\n    });\n    i0.ɵɵtext(33, \"Save\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.newCustomerForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerIdFromTemplate == ctx_r1.customerAlreadyExists);\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.customerShortCodeFromTemplate == ctx_r1.customerShortCodeAlreadyExists);\n  }\n}\nfunction AddNewComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.custIdFromTemplate);\n  }\n}\nfunction AddNewComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r4.prodIdFromTemplate);\n  }\n}\nfunction AddNewComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r8.ownerIdFromTemplate);\n  }\n}\nfunction AddNewComponent_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r10.faultIdFromTemplate);\n  }\n}\nfunction AddNewComponent_div_71_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Document Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewComponent_div_71_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtemplate(1, AddNewComponent_div_71_div_1_Template, 2, 0, \"div\", 57);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.getDocNo.errors == null ? null : ctx_r12.getDocNo.errors[\"required\"]);\n  }\n}\nfunction AddNewComponent_div_76_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Document Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewComponent_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 55);\n    i0.ɵɵtemplate(1, AddNewComponent_div_76_div_1_Template, 2, 0, \"div\", 57);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.getDocDate.errors == null ? null : ctx_r13.getDocDate.errors[\"required\"]);\n  }\n}\nfunction AddNewComponent_div_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 56);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.formInvalid, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"/product-detail\"];\n};\nconst _c1 = function () {\n  return [\"/owner-detail\"];\n};\nconst _c2 = function () {\n  return [\"/fault-detail\"];\n};\nconst _c3 = function () {\n  return [\"/\"];\n};\nexport class AddNewComponent {\n  constructor(fb, returnService, router, appService, userService, customerService, productService, faultService, ownerService, authService, modalService) {\n    this.fb = fb;\n    this.returnService = returnService;\n    this.router = router;\n    this.appService = appService;\n    this.userService = userService;\n    this.customerService = customerService;\n    this.productService = productService;\n    this.faultService = faultService;\n    this.ownerService = ownerService;\n    this.authService = authService;\n    this.modalService = modalService;\n    this.batchDateToggle = false;\n    this.closeResult = '';\n    this.customer = {};\n    this.product = {};\n    this.fault = {};\n    this.owner = {};\n    this.custIdFromTemplate = '';\n    this.prodIdFromTemplate = '';\n    this.faultIdFromTemplate = '';\n    this.ownerIdFromTemplate = '';\n    this.customerList = [];\n    this.productList = [];\n    this.faultList = [];\n    this.ownerList = [];\n    this.notFound = 'Not Found';\n    this.notLoaded = 'Not Loaded';\n    this.formInvalid = '';\n    this.userId = this.notLoaded;\n    this.getUserId = userId => {\n      this.userId = userId;\n    };\n    this.form = this.fb.group({\n      customer: ['', Validators.nullValidator],\n      product: ['', Validators.nullValidator],\n      qtyOnDoc: [0],\n      qtyReturned: [0],\n      batchDate: [],\n      owner: [''],\n      fault: [''],\n      docNo: ['', Validators.required],\n      docDate: [, Validators.required],\n      resolved: [],\n      comment: ['']\n    });\n    this.showToast = false;\n    this.message = 'Something went wrong';\n    this.custFormatter = customer => customer.customerName;\n    this.prodFormatter = product => product.productName;\n    this.faultFormatter = fault => fault.name;\n    this.ownerFormatter = owner => owner.firstName;\n    //Gets all customers for searchbox\n    this.searchCust = text$ => {\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.customerList.filter(customer => new RegExp(term, 'mi').test(customer.customerName)).slice(0, 10)));\n    };\n    //Gets all products for searchbox\n    this.searchProd = text$ => {\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.productList.filter(product => new RegExp(term, 'mi').test(product.productName)).slice(0, 10)));\n    };\n    //Gets all faults for searchbox\n    this.searchFault = text$ => {\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.faultList.filter(fault => new RegExp(term, 'mi').test(fault.name)).slice(0, 10)));\n    };\n    //Gets all owners for searchbox\n    this.searchOwner = text$ => {\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.ownerList.filter(owner => new RegExp(term, 'mi').test(owner.firstName)).slice(0, 10)));\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        this.router.navigate(['/search-returns']);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status: \", err.statusText);\n      console.log(err);\n    };\n    //modals\n    //Modal Forms\n    this.newCustomerForm = this.fb.group({\n      customerName: [''],\n      email: [''],\n      address: [''],\n      shortCode: ['']\n    });\n    //customer Modal\n    //modal extensions\n    this.customerIdFromTemplate = '';\n    this.customerShortCodeFromTemplate = '';\n    this.customerAlreadyExists = 'Customer already exists';\n    this.customerShortCodeAlreadyExists = 'Short code already exists';\n  }\n  ngOnInit() {\n    this.userService.findUser({\n      email: this.authService.currentUser?.email\n    }).subscribe(u => {\n      this.getUserId(u.id);\n      console.log('The user id in the oninit subscribe call is: ' + this.userId);\n    });\n    this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError);\n    this.productService.searchProduct().subscribe(p => this.productList = p, this.handleError);\n    this.faultService.searchFault().subscribe(f => this.faultList = f, this.handleError);\n    this.ownerService.searchOwner().subscribe(o => this.ownerList = o, this.handleError);\n    this.form.controls.customer.setValue('Nothing my bro');\n  }\n  //Gets the id and name of the model in the search criteria\n  getModel(modelName, type) {\n    let modelFound = [];\n    //Get the type of model\n    if (type == 'customerType') {\n      let customerFound = this.customerList.filter(c => c.customerName == modelName);\n      console.log(customerFound.length);\n      if (customerFound.length > 0) {\n        customerFound.map(c => {\n          this.custIdFromTemplate = c.id;\n          this.customer.customerName = c.customerName;\n        });\n      } else {\n        this.custIdFromTemplate = this.notFound;\n      }\n    }\n    if (type == 'productType') {\n      let productFound = this.productList.filter(p => p.productName == modelName);\n      if (productFound.length > 0) {\n        productFound.map(p => {\n          this.prodIdFromTemplate = p.id;\n          this.product.productName = p.productName;\n        });\n      } else {\n        this.prodIdFromTemplate = this.notFound;\n      }\n    }\n    if (type == 'faultType') {\n      let faultFound = this.faultList.filter(f => f.name == modelName);\n      if (faultFound.length > 0) {\n        faultFound.map(f => {\n          this.faultIdFromTemplate = f.id;\n          this.fault.name = f.name;\n        });\n      } else {\n        this.faultIdFromTemplate = this.notFound;\n      }\n    }\n    if (type == 'ownerType') {\n      let ownerFound = this.ownerList.filter(o => o.firstName == modelName);\n      if (ownerFound.length > 0) {\n        ownerFound.map(o => {\n          this.ownerIdFromTemplate = o.id;\n          this.owner.firstName = o.firstName;\n        });\n      } else {\n        this.ownerIdFromTemplate = this.notFound;\n      }\n    }\n  }\n  toggleBatch() {\n    this.batchDateToggle = !this.batchDateToggle;\n  }\n  save() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      console.log(\"Form is invalid\");\n      console.log(\"Customer valid?: \" + this.getCustomer.valid);\n      console.log(\"Product valid?: \" + this.getProduct.valid);\n      console.log(\"Fault valid?: \" + this.getFault.valid);\n      console.log(\"Owner valid?: \" + this.getOwner.valid);\n      console.log(\"User id is: \" + this.userId);\n      return;\n    }\n    this.message = 'Return Saved';\n    this.showToast = true;\n    const createdReturn = {\n      docDate: this.form.get('docDate')?.value,\n      customerId: this.custIdFromTemplate,\n      productId: this.prodIdFromTemplate,\n      qtyOnDoc: this.form.get('qtyOnDoc')?.value,\n      batchDate: this.form.get('batchDate')?.value,\n      ownerId: this.ownerIdFromTemplate,\n      faultId: this.faultIdFromTemplate,\n      docNo: this.form.get('docNo')?.value,\n      qtyReturned: this.form.get('qtyReturned')?.value,\n      resolved: JSON.parse(this.form.controls.resolved.value),\n      comment: this.form.get('comment')?.value,\n      userId: this.userId\n    };\n    this.returnService.createReturnReturn({\n      body: createdReturn\n    }).subscribe(_ => {\n      this.appService.setMessage(this.message);\n      this.appService.showToast(this.showToast);\n    }, this.handleError);\n    this.router.navigate(['/search-returns']);\n  }\n  //getters\n  get getDocDate() {\n    return this.form.controls.docDate;\n  }\n  get getCustomer() {\n    return this.form.controls.customer;\n  }\n  get getProduct() {\n    return this.form.controls.product;\n  }\n  get getQtyOnDoc() {\n    return this.form.controls.qtyOnDoc;\n  }\n  get getBatchDate() {\n    return this.form.controls.batchDate;\n  }\n  get getOwner() {\n    return this.form.controls.owner;\n  }\n  get getFault() {\n    return this.form.controls.fault;\n  }\n  get getDocNo() {\n    return this.form.controls.docNo;\n  }\n  get getQtyReturned() {\n    return this.form.controls.qtyReturned;\n  }\n  get getResolved() {\n    return this.form.controls.resolved;\n  }\n  get getComment() {\n    return this.form.controls.comment;\n  }\n  //\n  //customer Modal\n  openCustomerModal(content) {\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title'\n    }).result.then(result => {\n      this.closeResult = `Closed with: ${result}`;\n      this.saveNewCustomer();\n    }, reason => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  getDismissReason(reason) {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  saveNewCustomer() {\n    if (this.customerIdFromTemplate == this.customerAlreadyExists || this.customerShortCodeFromTemplate == this.customerShortCodeAlreadyExists) {\n      return;\n    }\n    let newCustomer = {\n      customerName: this.newCustomerForm.controls.customerName.value,\n      email: this.newCustomerForm.controls.email.value,\n      address: this.newCustomerForm.controls.address.value,\n      shortCode: this.newCustomerForm.controls.shortCode.value\n    };\n    this.customerService.createCustomer({\n      body: newCustomer\n    }).subscribe(() => {\n      this.showToast = true;\n      if (this.form.valid) {\n        this.message = 'Customer added successfully';\n        console.log('Customer added successfully');\n        this.customerList = [];\n        this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError);\n        this.form.controls.customer.setValue(newCustomer.customerName);\n      } else if (this.form.valid && !this.form.touched && !this.form.dirty) {\n        this.message = 'Nothing added';\n        console.log('Nothing added');\n      }\n      //this.appService.setMessage(this.message);\n      //this.appService.showToast(this.showToast)\n    });\n  }\n\n  customerExists(customerName) {\n    this.customerIdFromTemplate = '';\n    if (this.customer.customerName?.toLowerCase().trim() != customerName.toLowerCase().trim()) {\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == customerName.toLowerCase().trim());\n      if (customerFound.length > 0) {\n        this.customerIdFromTemplate = this.customerAlreadyExists;\n      }\n    }\n  }\n  customerShortCodeExists(shortCode) {\n    this.customerShortCodeFromTemplate = '';\n    if (this.customer.shortCode?.toLowerCase().trim() != shortCode.toLowerCase().trim()) {\n      let skuFound = this.customerList.filter(s => s.shortCode?.toLowerCase().trim() == shortCode.toLowerCase().trim());\n      if (skuFound.length > 0) {\n        this.customerShortCodeFromTemplate = this.customerShortCodeAlreadyExists;\n      }\n    }\n  }\n}\n_class = AddNewComponent;\n_class.ɵfac = function AddNewComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ReturnService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AppService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i2.FaultService), i0.ɵɵdirectiveInject(i2.OwnerService), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.NgbModal));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-new\"]],\n  decls: 100,\n  vars: 31,\n  consts: [[\"custContent\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"center\", \"shadow-custom\", \"mb-3\"], [1, \"container\"], [1, \"row\"], [1, \"mb-3\", \"col-12\"], [1, \"form-label\"], [\"class\", \"invalid-feedback d-block mb-3\", 4, \"ngIf\"], [1, \"input-group\"], [\"type\", \"text\", \"formcontrolName\", \"getCustomer\", 1, \"form-control\", 3, \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"blur\"], [\"customerValue\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [\"type\", \"text\", \"formcontrolName\", \"product\", 1, \"form-control\", 3, \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"blur\"], [\"prodValue\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"routerLink\"], [1, \"mb-3\", \"col-6\"], [\"formControlName\", \"qtyOnDoc\", \"type\", \"number\", \"min\", \"0\", 1, \"form-control\"], [\"formControlName\", \"qtyReturned\", \"type\", \"number\", \"min\", \"0\", 1, \"form-control\"], [1, \"col-12\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\"], [1, \"me-3\"], [\"type\", \"checkbox\", 1, \"form-check-input\", \"mt-0\", 3, \"change\"], [\"batchChecked\", \"\"], [\"formControlName\", \"batchDate\", \"type\", \"date\", 1, \"form-control\", 3, \"readonly\"], [\"batchDateBox\", \"\"], [\"type\", \"text\", \"formcontrolName\", \"owner\", 1, \"form-control\", 3, \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"editable\", \"blur\"], [\"ownerValue\", \"\"], [\"type\", \"text\", \"formcontrolName\", \"fault\", 1, \"form-control\", 3, \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"editable\", \"blur\"], [\"faultValue\", \"\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [\"formControlName\", \"docNo\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"docDate\", \"type\", \"date\", 1, \"form-control\"], [\"formControlName\", \"resolved\", 1, \"form-select\"], [\"value\", \"true\"], [\"value\", \"false\"], [\"formControlName\", \"comment\", \"rows\", \"3\", \"maxlength\", \"255\", 1, \"form-control\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"button\", 1, \"btn-outline-danger\", \"btn\", \"col-6\", 3, \"routerLink\"], [1, \"fa\", \"fa-cancel\"], [\"type\", \"submit\", 1, \"btn-outline-success\", \"btn\", \"col-6\"], [1, \"fa\", \"fa-save\"], [1, \"modal-header\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"], [1, \"modal-body\"], [3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"customerName\", 1, \"form-control\", 3, \"keyup\"], [\"customerFormValue\", \"\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"formControlName\", \"address\", \"rows\", \"3\", \"maxlength\", \"255\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"shortCode\", 1, \"form-control\", 3, \"keyup\"], [\"customerShortCodeValue\", \"\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-dark\", 3, \"click\"], [1, \"invalid-feedback\", \"d-block\"], [1, \"invalid-feedback\", \"d-block\", \"mb-3\"], [4, \"ngIf\"]],\n  template: function AddNewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r27 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Add New Return\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵtemplate(3, AddNewComponent_ng_template_3_Template, 34, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddNewComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"div\", 3)(8, \"div\", 4)(9, \"div\", 5)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, AddNewComponent_div_12_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(13, \"div\", 8)(14, \"input\", 9, 10);\n      i0.ɵɵlistener(\"blur\", function AddNewComponent_Template_input_blur_14_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r3 = i0.ɵɵreference(15);\n        return i0.ɵɵresetView(ctx.getModel(_r3.value, \"customerType\"));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function AddNewComponent_Template_button_click_16_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.openCustomerModal(_r0));\n      });\n      i0.ɵɵtext(17, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 5)(20, \"label\", 6);\n      i0.ɵɵtext(21, \"Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, AddNewComponent_div_22_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(23, \"div\", 8)(24, \"input\", 12, 13);\n      i0.ɵɵlistener(\"blur\", function AddNewComponent_Template_input_blur_24_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r5 = i0.ɵɵreference(25);\n        return i0.ɵɵresetView(ctx.getModel(_r5.value, \"productType\"));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 14);\n      i0.ɵɵtext(27, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(28, \"div\", 4)(29, \"div\", 15)(30, \"label\", 6);\n      i0.ɵɵtext(31, \"Qty on Document\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 15)(34, \"label\", 6);\n      i0.ɵɵtext(35, \"Qty Returned\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 4)(38, \"div\", 18)(39, \"div\", 19)(40, \"div\", 20)(41, \"span\", 21);\n      i0.ɵɵtext(42, \"No Batch Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"input\", 22, 23);\n      i0.ɵɵlistener(\"change\", function AddNewComponent_Template_input_change_43_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r7 = i0.ɵɵreference(46);\n        ctx.toggleBatch();\n        return i0.ɵɵresetView(_r7.value = \"\");\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(45, \"input\", 24, 25);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"div\", 4)(48, \"div\", 5)(49, \"label\", 6);\n      i0.ɵɵtext(50, \"Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(51, AddNewComponent_div_51_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(52, \"div\", 8)(53, \"input\", 26, 27);\n      i0.ɵɵlistener(\"blur\", function AddNewComponent_Template_input_blur_53_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r9 = i0.ɵɵreference(54);\n        return i0.ɵɵresetView(ctx.getModel(_r9.value, \"ownerType\"));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"button\", 14);\n      i0.ɵɵtext(56, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(57, \"div\", 4)(58, \"div\", 5)(59, \"label\", 6);\n      i0.ɵɵtext(60, \"Fault\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(61, AddNewComponent_div_61_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(62, \"div\", 8)(63, \"input\", 28, 29);\n      i0.ɵɵlistener(\"blur\", function AddNewComponent_Template_input_blur_63_listener() {\n        i0.ɵɵrestoreView(_r27);\n        const _r11 = i0.ɵɵreference(64);\n        return i0.ɵɵresetView(ctx.getModel(_r11.value, \"faultType\"));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(65, \"button\", 14);\n      i0.ɵɵtext(66, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(67, \"div\", 4)(68, \"div\", 15)(69, \"label\", 6);\n      i0.ɵɵtext(70, \"External Document No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(71, AddNewComponent_div_71_Template, 2, 1, \"div\", 30);\n      i0.ɵɵelement(72, \"input\", 31);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"div\", 15)(74, \"label\", 6);\n      i0.ɵɵtext(75, \"Document Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(76, AddNewComponent_div_76_Template, 2, 1, \"div\", 30);\n      i0.ɵɵelement(77, \"input\", 32);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(78, \"div\", 4)(79, \"div\", 15)(80, \"label\", 6);\n      i0.ɵɵtext(81, \"Investigate / Resolved\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(82, \"select\", 33)(83, \"option\", 34);\n      i0.ɵɵtext(84, \"Resolved\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(85, \"option\", 35);\n      i0.ɵɵtext(86, \"Investigate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(87, \"div\", 5)(88, \"label\", 6);\n      i0.ɵɵtext(89, \"Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(90, \"textarea\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(91, AddNewComponent_div_91_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(92, \"div\", 4)(93, \"div\", 37)(94, \"button\", 38);\n      i0.ɵɵelement(95, \"i\", 39);\n      i0.ɵɵtext(96, \" Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(97, \"button\", 40);\n      i0.ɵɵelement(98, \"i\", 41);\n      i0.ɵɵtext(99, \" Save\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(15);\n      const _r5 = i0.ɵɵreference(25);\n      const _r6 = i0.ɵɵreference(44);\n      const _r9 = i0.ɵɵreference(54);\n      const _r11 = i0.ɵɵreference(64);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.custIdFromTemplate == \"Not Found\" && _r3.value != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngbTypeahead\", ctx.searchCust)(\"inputFormatter\", ctx.custFormatter)(\"resultFormatter\", ctx.custFormatter);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.prodIdFromTemplate == \"Not Found\" && _r5.value != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngbTypeahead\", ctx.searchProd)(\"inputFormatter\", ctx.prodFormatter)(\"resultFormatter\", ctx.prodFormatter);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(27, _c0));\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"readonly\", _r6.checked == true ? true : false);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.ownerIdFromTemplate == \"Not Found\" && _r9.value != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngbTypeahead\", ctx.searchOwner)(\"inputFormatter\", ctx.ownerFormatter)(\"resultFormatter\", ctx.ownerFormatter)(\"editable\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(28, _c1));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.faultIdFromTemplate == \"Not Found\" && _r11.value != \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngbTypeahead\", ctx.searchFault)(\"inputFormatter\", ctx.faultFormatter)(\"resultFormatter\", ctx.faultFormatter)(\"editable\", false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(29, _c2));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.getDocNo.invalid && (ctx.getDocNo.touched || ctx.getDocNo.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.getDocDate.invalid && (ctx.getDocDate.touched || ctx.getDocDate.dirty));\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngIf\", ctx.formInvalid.length > 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(30, _c3));\n    }\n  },\n  dependencies: [i7.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink, i6.NgbTypeahead],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","debounceTime","distinctUntilChanged","filter","map","ModalDismissReasons","i0","AddNewComponent","constructor","fb","returnService","router","appService","userService","customerService","productService","faultService","ownerService","authService","modalService","notLoaded","userId","group","customer","nullValidator","product","qtyOnDoc","qtyReturned","batchDate","owner","fault","docNo","required","docDate","resolved","comment","customerName","productName","name","firstName","text$","pipe","term","length","customerList","RegExp","test","slice","productList","faultList","ownerList","err","status","navigate","console","log","statusText","email","address","shortCode","ngOnInit","findUser","currentUser","subscribe","u","getUserId","id","searchCustomer","c","handleError","searchProduct","p","searchFault","f","searchOwner","o","form","controls","setValue","getModel","modelName","type","modelFound","customerFound","custIdFromTemplate","notFound","productFound","prodIdFromTemplate","faultFound","faultIdFromTemplate","ownerFound","ownerIdFromTemplate","toggleBatch","batchDateToggle","save","invalid","markAllAsTouched","getCustomer","valid","getProduct","getFault","getOwner","message","showToast","createdReturn","get","value","customerId","productId","ownerId","faultId","JSON","parse","createReturnReturn","body","_","setMessage","getDocDate","getQtyOnDoc","getBatchDate","getDocNo","getQtyReturned","getResolved","getComment","openCustomerModal","content","open","ariaLabelledBy","result","then","closeResult","saveNewCustomer","reason","getDismissReason","ESC","BACKDROP_CLICK","customerIdFromTemplate","customerAlreadyExists","customerShortCodeFromTemplate","customerShortCodeAlreadyExists","newCustomer","newCustomerForm","createCustomer","touched","dirty","customerExists","toLowerCase","trim","customerShortCodeExists","skuFound","s","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\add-new\\add-new.component.ts","C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\add-new\\add-new.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { debounceTime, distinctUntilChanged, filter, map, Observable, OperatorFunction } from 'rxjs';\r\nimport { CustomerRm, FaultRm, OwnerRm, ProductRm, ReturnDto, ReturnRm } from '../api/models';\r\nimport { CustomerService, FaultService, OwnerService, ProductService, ReturnService, UserService } from '../api/services';\r\nimport { AppService } from '../app.service';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { ModalDismissReasons, NgbDatepickerModule, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\n@Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.css']\n})\nexport class AddNewComponent implements OnInit {\n\n  batchDateToggle = false;\n  closeResult = '';\n\n  constructor(private fb: FormBuilder, private returnService: ReturnService, private router: Router, private appService: AppService, private userService: UserService,\r\n    private customerService: CustomerService, private productService: ProductService, private faultService: FaultService, private ownerService: OwnerService,\n    private authService: AuthService, private modalService: NgbModal ) { }\n\n  customer: CustomerRm = {}\r\n  product: ProductRm = {}\r\n  fault: FaultRm = {}\r\n  owner: OwnerRm = {}\r\n  custIdFromTemplate = ''\r\n  prodIdFromTemplate = ''\r\n  faultIdFromTemplate = ''\r\n  ownerIdFromTemplate = ''\r\n\r\n  customerList: CustomerRm[] = []\r\n  productList: ProductRm[] = []\r\n  faultList: FaultRm[] = []\r\n  ownerList: OwnerRm[] = []\n\n  notFound = 'Not Found'\r\n  notLoaded = 'Not Loaded'\r\n  formInvalid = ''\n  userId = this.notLoaded\n\n  ngOnInit(): void {\n    this.userService.findUser({ email: this.authService.currentUser?.email! }).subscribe(u => {\r\n      this.getUserId(u.id!); console.log('The user id in the oninit subscribe call is: ' + this.userId)\r\n    })\n    this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError)\n    this.productService.searchProduct().subscribe(p => this.productList = p, this.handleError)\n    this.faultService.searchFault().subscribe(f => this.faultList = f, this.handleError)\n    this.ownerService.searchOwner().subscribe(o => this.ownerList = o, this.handleError)\n\n    this.form.controls.customer.setValue('Nothing my bro')\n  }\n\n  private getUserId = (userId: string) => {\r\n    this.userId = userId\r\n  }\n\n  form = this.fb.group({\r\n    customer: ['', Validators.nullValidator],\r\n    product: ['', Validators.nullValidator],\r\n    qtyOnDoc: [0],\r\n    qtyReturned: [0],\r\n    batchDate: [],\r\n    owner: [''],\r\n    fault: [''],\r\n    docNo: ['', Validators.required],\r\n    docDate: [,Validators.required],\r\n    resolved: [],\r\n    comment: ['']\r\n  })\r\n\r\n  showToast = false;\r\n  message = 'Something went wrong'\r\n\n  custFormatter = (customer: CustomerRm) => customer.customerName!\r\n  prodFormatter = (product: ProductRm) => product.productName!\r\n  faultFormatter = (fault: FaultRm) => fault.name!\r\n  ownerFormatter = (owner: OwnerRm) => owner.firstName!\r\n\r\n  //Gets all customers for searchbox\r\n  searchCust: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    \r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.customerList.filter((customer) => new RegExp(term, 'mi').test(customer.customerName!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all products for searchbox\r\n  searchProd: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n\r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.productList.filter((product) => new RegExp(term, 'mi').test(product.productName!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all faults for searchbox\r\n  searchFault: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n\r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.faultList.filter((fault) => new RegExp(term, 'mi').test(fault.name!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all owners for searchbox\r\n  searchOwner: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n\r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.ownerList.filter((owner) => new RegExp(term, 'mi').test(owner.firstName!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets the id and name of the model in the search criteria\r\n  getModel(modelName: string, type: string) {\r\n    let modelFound: any[] = []\r\n\r\n    //Get the type of model\r\n    if (type == 'customerType') {\r\n      let customerFound = this.customerList.filter(c => c.customerName == modelName)\r\n      console.log(customerFound.length)\r\n      if (customerFound.length > 0) {\r\n        customerFound.map(c => { this.custIdFromTemplate = c.id!; this.customer.customerName = c.customerName! })\r\n      }\r\n      else {\r\n        this.custIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n\r\n    if (type == 'productType') {\r\n      let productFound = this.productList.filter(p => p.productName == modelName)\r\n      if (productFound.length > 0) {\r\n        productFound.map(p => { this.prodIdFromTemplate = p.id!; this.product.productName = p.productName! })\r\n      }\r\n      else {\r\n        this.prodIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n    if (type == 'faultType') {\r\n      let faultFound = this.faultList.filter(f => f.name == modelName)\r\n      if (faultFound.length > 0) {\r\n        faultFound.map(f => { this.faultIdFromTemplate = f.id!; this.fault.name = f.name! })\r\n      }\r\n      else {\r\n        this.faultIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n    if (type == 'ownerType') {\r\n      let ownerFound = this.ownerList.filter(o => o.firstName == modelName)\r\n      if (ownerFound.length > 0) {\r\n        ownerFound.map(o => { this.ownerIdFromTemplate = o.id!; this.owner.firstName = o.firstName! })\r\n      }\r\n      else {\r\n        this.ownerIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n\n\n  toggleBatch() {\n    this.batchDateToggle = !this.batchDateToggle;\r\n  }\n\n  save() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched()\r\n      console.log(\"Form is invalid\")\r\n      console.log(\"Customer valid?: \" + this.getCustomer.valid)\r\n      console.log(\"Product valid?: \" + this.getProduct.valid)\r\n      console.log(\"Fault valid?: \" + this.getFault.valid)\r\n      console.log(\"Owner valid?: \" + this.getOwner.valid)\r\n      console.log(\"User id is: \" + this.userId)\r\n      return\r\n    }\r\n\r\n    this.message = 'Return Saved'\r\n    this.showToast = true\r\n\r\n    const createdReturn: ReturnDto = {\r\n      docDate: this.form.get('docDate')?.value!,\r\n      customerId: this.custIdFromTemplate,\r\n      productId: this.prodIdFromTemplate,\r\n      qtyOnDoc: this.form.get('qtyOnDoc')?.value!,\r\n      batchDate: this.form.get('batchDate')?.value!,\r\n      ownerId: this.ownerIdFromTemplate,\r\n      faultId: this.faultIdFromTemplate,\r\n      docNo: this.form.get('docNo')?.value!,\r\n      qtyReturned: this.form.get('qtyReturned')?.value!,\r\n      resolved: JSON.parse(this.form.controls.resolved.value!),\r\n      comment: this.form.get('comment')?.value!,\r\n      userId: this.userId!\r\n    }\r\n\r\n\r\n\r\n    this.returnService.createReturnReturn({ body: createdReturn }).subscribe(_ => { this.appService.setMessage(this.message); this.appService.showToast(this.showToast) }, this.handleError)\r\n    this.router.navigate(['/search-returns'])\r\n  }\n\n  private handleError = (err: any) => {\r\n\r\n    if (err.status == 404) {\r\n      this.router.navigate(['/search-returns'])\r\n    }\r\n\r\n    console.log(\"Response Error. Status: \", err.status)\r\n    console.log(\"Response Error. Status: \", err.statusText)\r\n    console.log(err);\r\n  }\n\n  //getters\r\n  get getDocDate() {\r\n    return this.form.controls.docDate\r\n  }\r\n\r\n  get getCustomer() {\r\n    return this.form.controls.customer\r\n  }\r\n\r\n  get getProduct() {\r\n    return this.form.controls.product\r\n  }\r\n\r\n  get getQtyOnDoc() {\r\n    return this.form.controls.qtyOnDoc\r\n  }\r\n\r\n  get getBatchDate() {\r\n    return this.form.controls.batchDate\r\n  }\r\n\r\n  get getOwner() {\r\n    return this.form.controls.owner\r\n  }\r\n\r\n  get getFault() {\r\n    return this.form.controls.fault\r\n  }\r\n\r\n  get getDocNo() {\r\n    return this.form.controls.docNo\r\n  }\r\n\r\n  get getQtyReturned() {\r\n    return this.form.controls.qtyReturned\r\n  }\r\n\r\n  get getResolved() {\r\n    return this.form.controls.resolved\r\n  }\r\n\r\n  get getComment() {\r\n    return this.form.controls.comment\r\n  }\r\n\r\n  //modals\r\n\r\n  //Modal Forms\r\n  newCustomerForm = this.fb.group({\n    customerName: [''],\n    email: [''],\n    address: [''],\n    shortCode: [''],\n  })\r\n  //\r\n    //customer Modal\r\n  openCustomerModal(content: any) {\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then(\r\n      (result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n        this.saveNewCustomer()\r\n      },\r\n      (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      },\r\n    );\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n    //customer Modal\r\n  //modal extensions\r\n  customerIdFromTemplate = ''\r\n  customerShortCodeFromTemplate = ''\r\n  customerAlreadyExists = 'Customer already exists'\r\n  customerShortCodeAlreadyExists = 'Short code already exists'\r\n\r\n\n  saveNewCustomer() {\n    if (this.customerIdFromTemplate == this.customerAlreadyExists || this.customerShortCodeFromTemplate == this.customerShortCodeAlreadyExists) {\n      return\n    }\n\n    let newCustomer: CustomerRm = {\n      customerName: this.newCustomerForm.controls.customerName.value,\n      email: this.newCustomerForm.controls.email.value,\n      address: this.newCustomerForm.controls.address.value,\n      shortCode: this.newCustomerForm.controls.shortCode.value\n    }\n\n    this.customerService.createCustomer({ body: newCustomer }).subscribe(() => {\n      this.showToast = true\n      if (this.form.valid) {\n        this.message = 'Customer added successfully'\n        console.log('Customer added successfully')\n        this.customerList = []\n        this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError)\n        this.form.controls.customer.setValue(newCustomer.customerName!)\n      }\n      else if (this.form.valid && !this.form.touched && !this.form.dirty) {\n        this.message = 'Nothing added'\n        console.log('Nothing added')\n      }\n      //this.appService.setMessage(this.message);\n      //this.appService.showToast(this.showToast)\n    })\n\n  }\r\n\r\n  customerExists(customerName: string) {\n    this.customerIdFromTemplate = ''\n    if (this.customer.customerName?.toLowerCase().trim() != customerName.toLowerCase().trim()) {\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == customerName.toLowerCase().trim())\n      if (customerFound.length > 0) {\n        this.customerIdFromTemplate = this.customerAlreadyExists\n      }\n    }\n  }\n\n  customerShortCodeExists(shortCode: string) {\n    this.customerShortCodeFromTemplate = ''\n    if (this.customer.shortCode?.toLowerCase().trim() != shortCode.toLowerCase().trim()) {\n      let skuFound = this.customerList.filter(s => s.shortCode?.toLowerCase().trim() == shortCode.toLowerCase().trim())\n      if (skuFound.length > 0) {\n        this.customerShortCodeFromTemplate = this.customerShortCodeAlreadyExists\n      }\n    }\n  }\r\n}\n\n","<h2>Add New Return</h2>\r\n<hr />\r\n\r\n<!--Modals-->\r\n<ng-template #custContent let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Add New Customer</h4>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"newCustomerForm\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Customer Name</label>\r\n          <div *ngIf=\"customerIdFromTemplate == customerAlreadyExists\" class=\"invalid-feedback d-block\">{{customerIdFromTemplate}}</div>\r\n          <div class=\"input-group\">\r\n            <input #customerFormValue\r\n                   type=\"text\"\r\n                   class=\"form-control\"\r\n                   formControlName=\"customerName\"\r\n                   (keyup)=\"customerExists(customerFormValue.value)\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Email Address</label>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\"\r\n                   class=\"form-control\"\r\n                   formControlName=\"email\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3 col-12\">\r\n        <label class=\"form-label\">Address</label>\r\n        <textarea formControlName=\"address\"\r\n                  class=\"form-control\" rows=\"3\"\r\n                  maxlength=\"255\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Short Code</label>\r\n          <div *ngIf=\"customerShortCodeFromTemplate == customerShortCodeAlreadyExists\" class=\"invalid-feedback d-block\">{{customerShortCodeFromTemplate}}</div>\r\n          <input #customerShortCodeValue\r\n                 type=\"text\"\r\n                 class=\"form-control\"\r\n                 formControlName=\"shortCode\"\r\n                 (keyup)=\"customerShortCodeExists(customerShortCodeValue.value)\">\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Save</button>\r\n  </div>\r\n</ng-template>\r\n<!--Modals-->\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\r\n  <div class=\"center shadow-custom mb-3\">\r\n    <div class=\"container\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Customer</label>\r\n          <div *ngIf=\"custIdFromTemplate == 'Not Found' && customerValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{custIdFromTemplate}}</div>\r\n          <div class=\"input-group\">\r\n            <input #customerValue\r\n                   type=\"text\"\r\n                   class=\"form-control\"\r\n                   [ngbTypeahead]=\"searchCust\"\r\n                   [inputFormatter]=\"custFormatter\"\r\n                   [resultFormatter]=\"custFormatter\"\r\n                   formcontrolName=\"getCustomer\"\r\n                   (blur)=\"getModel(customerValue.value, 'customerType')\" />\r\n            <button class=\"btn btn-outline-secondary\" (click)=\"openCustomerModal(custContent)\" type=\"button\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Product</label>\r\n          <div *ngIf=\"prodIdFromTemplate == 'Not Found' && prodValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{prodIdFromTemplate}}</div>\r\n          <div class=\"input-group\">\r\n            <input #prodValue\r\n                   type=\"text\"\r\n                   class=\"form-control\"\r\n                   [ngbTypeahead]=\"searchProd\"\r\n                   [inputFormatter]=\"prodFormatter\"\r\n                   [resultFormatter]=\"prodFormatter\"\r\n                   formcontrolName=\"product\"\r\n                   (blur)=\"getModel(prodValue.value, 'productType')\" />\r\n            <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/product-detail']\" type=\"button\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">Qty on Document</label>\r\n          <input formControlName=\"qtyOnDoc\" type=\"number\" min=\"0\" class=\"form-control\">\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">Qty Returned</label>\r\n          <input formControlName=\"qtyReturned\" type=\"number\" min=\"0\" class=\"form-control\">\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-text\">\r\n              <span class=\"me-3\">No Batch Date</span>\r\n              <input class=\"form-check-input mt-0\" type=\"checkbox\" #batchChecked (change)=\"toggleBatch(); batchDateBox.value = ''\">\r\n            </div>\r\n            <input formControlName=\"batchDate\" type=\"date\" #batchDateBox [readonly]=\"batchChecked.checked == true ? true : false\" class=\"form-control\">\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-12\">\r\n            <label class=\"form-label\">Owner</label>\r\n            <div *ngIf=\"ownerIdFromTemplate == 'Not Found' && ownerValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{ownerIdFromTemplate}}</div>\r\n            <div class=\"input-group\">\r\n              <input #ownerValue\r\n                     type=\"text\"\r\n                     class=\"form-control\"\r\n                     [ngbTypeahead]=\"searchOwner\"\r\n                     [inputFormatter]=\"ownerFormatter\"\r\n                     [resultFormatter]=\"ownerFormatter\"\r\n                     [editable]=\"false\"\r\n                     formcontrolName=\"owner\"\r\n                     (blur)=\"getModel(ownerValue.value, 'ownerType')\" />\r\n              <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/owner-detail']\" type=\"button\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-12\">\r\n            <label class=\"form-label\">Fault</label>\r\n            <div *ngIf=\"faultIdFromTemplate == 'Not Found' && faultValue.value != ''\" class=\"invalid-feedback d-block mb-3\">{{faultIdFromTemplate}}</div>\r\n            <div class=\"input-group\">\r\n              <input #faultValue\r\n                     type=\"text\"\r\n                     class=\"form-control\"\r\n                     [ngbTypeahead]=\"searchFault\"\r\n                     [inputFormatter]=\"faultFormatter\"\r\n                     [resultFormatter]=\"faultFormatter\"\r\n                     [editable]=\"false\"\r\n                     formcontrolName=\"fault\"\r\n                     (blur)=\"getModel(faultValue.value, 'faultType')\" />\r\n              <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/fault-detail']\" type=\"button\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">External Document No.</label>\r\n            <div *ngIf=\"getDocNo.invalid && (getDocNo.touched || getDocNo.dirty)\" class=\"invalid-feedback d-block\">\r\n              <div *ngIf=\"getDocNo.errors?.['required']\">Document Number is required</div>\r\n            </div>\r\n            <input formControlName=\"docNo\" type=\"text\" class=\"form-control\">\r\n          </div>\r\n\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">Document Date</label>\r\n            <div *ngIf=\"getDocDate.invalid && (getDocDate.touched || getDocDate.dirty)\" class=\"invalid-feedback d-block\">\r\n              <div *ngIf=\"getDocDate.errors?.['required']\">Document Date is required</div>\r\n            </div>\r\n            <input formControlName=\"docDate\" type=\"date\" class=\"form-control\">\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">Investigate / Resolved</label>\r\n            <select formControlName=\"resolved\" class=\"form-select\">\r\n              <option value=true>Resolved</option>\r\n              <option value=false>Investigate</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Comment</label>\r\n          <textarea formControlName=\"comment\" class=\"form-control\" rows=\"3\" maxlength=\"255\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"invalid-feedback d-block mb-3\" *ngIf=\"formInvalid.length > 0\">\r\n          {{formInvalid}}\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 mb-3\">\r\n            <button type=\"button\" [routerLink]=\"['/']\" class=\"btn-outline-danger btn col-6\"><i class=\"fa fa-cancel\"></i> Cancel</button>\r\n            <button type=\"submit\" class=\"btn-outline-success btn col-6\"><i class=\"fa fa-save\"></i> Save</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}