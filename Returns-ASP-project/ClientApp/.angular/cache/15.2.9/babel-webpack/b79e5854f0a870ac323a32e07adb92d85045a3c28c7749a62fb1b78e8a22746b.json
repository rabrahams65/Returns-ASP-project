{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api/services\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction CustomerDetailComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.customerIdFromTemplate);\n  }\n}\nfunction CustomerDetailComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.shortCodeFromTemplate);\n  }\n}\nconst _c0 = function () {\n  return [\"/customers\"];\n};\nexport class CustomerDetailComponent {\n  constructor(activatedRoute, customerService, fb, router) {\n    this.activatedRoute = activatedRoute;\n    this.customerService = customerService;\n    this.fb = fb;\n    this.router = router;\n    this.customerId = '';\n    this.customer = {};\n    this.showToast = false;\n    this.message = '';\n    this.customerAlreadyExists = 'Customer already exists';\n    this.customerIdFromTemplate = '';\n    this.customerList = [];\n    this.shortCodeFromTemplate = '';\n    this.shortCodeAlreadyExists = 'Short Code already exists';\n    this.form = this.fb.group({\n      customerName: [''],\n      email: [''],\n      address: [''],\n      shortCode: ['']\n    });\n    this.findCustomer = customerId => {\n      this.customerId = customerId ?? 'not passed';\n      this.customerService.findCustomer({\n        id: customerId\n      }).subscribe(c => {\n        this.customer = c;\n        this.form.controls.customerName.setValue(c.customerName);\n        this.form.controls.email.setValue(c.email);\n        this.form.controls.address.setValue(c.address);\n        this.form.controls.shortCode.setValue(c.shortCode);\n      }, this.handleError);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        this.router.navigate(['/customers']);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(p => {\n      this.findCustomer(p.get(\"customerId\"));\n      console.log(this.customerId + ' ' + p.get(\"customerId\"));\n    });\n    this.customerService.searchCustomer().subscribe(c => this.customerList = c);\n  }\n  update() {}\n  customerExists(customerName) {\n    this.customerIdFromTemplate = '';\n    if (this.customer.customerName?.toLowerCase().trim() != customerName.toLowerCase().trim()) {\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == customerName.toLowerCase().trim());\n      if (customerFound.length > 0) {\n        this.customerIdFromTemplate = this.customerAlreadyExists;\n      }\n    }\n  }\n  shortCodeExists(shortCode) {\n    this.shortCodeFromTemplate = '';\n    if (this.customer.shortCode?.toLowerCase().trim() != shortCode.toLowerCase().trim()) {\n      let skuFound = this.customerList.filter(s => s.shortCode?.toLowerCase().trim() == shortCode.toLowerCase().trim());\n      if (skuFound.length > 0) {\n        this.shortCodeFromTemplate = this.shortCodeAlreadyExists;\n      }\n    }\n  }\n}\n_class = CustomerDetailComponent;\n_class.ɵfac = function CustomerDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-customer-detail\"]],\n  decls: 39,\n  vars: 5,\n  consts: [[1, \"center\", \"shadow-custom\", \"mb-3\"], [1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"mb-3\", \"col-12\"], [1, \"form-label\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"customerName\", 1, \"form-control\", 3, \"keyup\"], [\"customerFormValue\", \"\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\"], [\"formControlName\", \"address\", \"rows\", \"3\", \"maxlength\", \"255\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"shortCode\", 1, \"form-control\", 3, \"keyup\"], [\"shortCodeValue\", \"\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"button\", 1, \"btn-outline-danger\", \"btn\", \"col-6\", 3, \"routerLink\"], [1, \"fa\", \"fa-cancel\"], [\"type\", \"submit\", 1, \"btn-outline-success\", \"btn\", \"col-6\"], [1, \"fa\", \"fa-save\"], [1, \"invalid-feedback\", \"d-block\"]],\n  template: function CustomerDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Edit Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CustomerDetailComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Fault Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, CustomerDetailComponent_div_10_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"input\", 8, 9);\n      i0.ɵɵlistener(\"keyup\", function CustomerDetailComponent_Template_input_keyup_12_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r1 = i0.ɵɵreference(13);\n        return i0.ɵɵresetView(ctx.customerExists(_r1.value));\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"div\", 4)(16, \"label\", 5);\n      i0.ɵɵtext(17, \"Email Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 7);\n      i0.ɵɵelement(19, \"input\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\", 5);\n      i0.ɵɵtext(22, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"textarea\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 3)(25, \"div\", 4)(26, \"label\", 5);\n      i0.ɵɵtext(27, \"Short Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, CustomerDetailComponent_div_28_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementStart(29, \"input\", 12, 13);\n      i0.ɵɵlistener(\"keyup\", function CustomerDetailComponent_Template_input_keyup_29_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r3 = i0.ɵɵreference(30);\n        return i0.ɵɵresetView(ctx.shortCodeExists(_r3.value));\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 3)(32, \"div\", 14)(33, \"button\", 15);\n      i0.ɵɵelement(34, \"i\", 16);\n      i0.ɵɵtext(35, \" Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"button\", 17);\n      i0.ɵɵelement(37, \"i\", 18);\n      i0.ɵɵtext(38, \" Save\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.customerIdFromTemplate == ctx.customerAlreadyExists);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngIf\", ctx.shortCodeFromTemplate == ctx.shortCodeAlreadyExists);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.MaxLengthValidator, i3.FormGroupDirective, i3.FormControlName, i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","CustomerDetailComponent","constructor","activatedRoute","customerService","fb","router","group","customerName","email","address","shortCode","customerId","findCustomer","id","subscribe","c","customer","form","controls","setValue","handleError","err","status","navigate","console","log","statusText","ngOnInit","paramMap","p","get","searchCustomer","customerList","update","customerExists","customerIdFromTemplate","toLowerCase","trim","customerFound","filter","length","customerAlreadyExists","shortCodeExists","shortCodeFromTemplate","skuFound","s","shortCodeAlreadyExists","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\customer-detail\\customer-detail.component.html","C:\\Users\\PC\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\customer-detail\\customer-detail.component.ts"],"sourcesContent":["<h3>Edit Customer</h3>\r\n<hr />\r\n\r\n<div class=\"center shadow-custom mb-3\">\r\n  <div class=\"container\">\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"update()\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Fault Name</label>\r\n          <div *ngIf=\"customerIdFromTemplate == customerAlreadyExists\" class=\"invalid-feedback d-block\">{{customerIdFromTemplate}}</div>\r\n          <div class=\"input-group\">\r\n            <input #customerFormValue\r\n                   type=\"text\"\r\n                   class=\"form-control\"\r\n                   formControlName=\"customerName\"\r\n                   (keyup)=\"customerExists(customerFormValue.value)\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Email Address</label>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\"\r\n                   class=\"form-control\"\r\n                   formControlName=\"email\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3 col-12\">\r\n        <label class=\"form-label\">Address</label>\r\n        <textarea formControlName=\"address\"\r\n                  class=\"form-control\" rows=\"3\"\r\n                  maxlength=\"255\"></textarea>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Short Code</label>\r\n          <div *ngIf=\"shortCodeFromTemplate == shortCodeAlreadyExists\" class=\"invalid-feedback d-block\">{{shortCodeFromTemplate}}</div>\r\n          <input #shortCodeValue\r\n                 type=\"text\"\r\n                 class=\"form-control\"\r\n                 formControlName=\"shortCode\"\r\n                 (keyup)=\"shortCodeExists(shortCodeValue.value)\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 mb-3\">\r\n          <button type=\"button\" [routerLink]=\"['/customers']\" class=\"btn-outline-danger btn col-6\"><i class=\"fa fa-cancel\"></i> Cancel</button>\r\n          <button type=\"submit\" class=\"btn-outline-success btn col-6\"><i class=\"fa fa-save\"></i> Save</button>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomerRm } from '../api/models';\r\nimport { CustomerService } from '../api/services';\r\n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.css']\n})\nexport class CustomerDetailComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute, private customerService: CustomerService, private fb: FormBuilder,\n              private router: Router) { }\n  customerId = ''\n  customer: CustomerRm = {}\n  showToast = false\n  message = ''\n  customerAlreadyExists = 'Customer already exists'\n  customerIdFromTemplate = ''\n  customerList: CustomerRm[] = []\n  shortCodeFromTemplate = ''\n  shortCodeAlreadyExists = 'Short Code already exists'\n\n  form = this.fb.group({\n    customerName: [''],\r\n    email: [''],\r\n    address: [''],\r\n    shortCode: [''],\r\n   })\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(p => { this.findCustomer(p.get(\"customerId\")); console.log(this.customerId + ' ' + p.get(\"customerId\")) })\n    this.customerService.searchCustomer().subscribe(c => this.customerList = c)\n  }\n\n  private findCustomer = (customerId: string | null) => {\n    this.customerId = customerId ?? 'not passed'\r\n\r\n    this.customerService.findCustomer({ id: customerId! }).subscribe(c => {\r\n      this.customer = c\r\n      this.form.controls.customerName.setValue(c.customerName!)\r\n      this.form.controls.email.setValue(c.email!)\r\n      this.form.controls.address.setValue(c.address!)\r\n      this.form.controls.shortCode.setValue(c.shortCode!)\r\n    }, this.handleError)\r\n  }\n\n  private handleError = (err: any) => {\r\n\r\n    if (err.status == 404) {\r\n      this.router.navigate(['/customers'])\r\n    }\r\n\r\n    console.log(\"Response Error. Status: \", err.status)\r\n    console.log(\"Response Error. Status: \", err.statusText)\r\n    console.log(err);\r\n  }\n\n  update() {\n\r\n  }\n\n  customerExists(customerName: string) {\r\n    this.customerIdFromTemplate = ''\r\n    if (this.customer.customerName?.toLowerCase().trim() != customerName.toLowerCase().trim()) {\r\n      let customerFound = this.customerList.filter(c => c.customerName?.toLowerCase().trim() == customerName.toLowerCase().trim())\r\n      if (customerFound.length > 0) {\r\n        this.customerIdFromTemplate = this.customerAlreadyExists\r\n      }\r\n    }\r\n  }\n\n  shortCodeExists(shortCode: string) {\r\n    this.shortCodeFromTemplate = ''\r\n    if (this.customer.shortCode?.toLowerCase().trim() != shortCode.toLowerCase().trim()) {\r\n      let skuFound = this.customerList.filter(s => s.shortCode?.toLowerCase().trim() == shortCode.toLowerCase().trim())\r\n      if (skuFound.length > 0) {\r\n        this.shortCodeFromTemplate = this.shortCodeAlreadyExists\r\n      }\r\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}