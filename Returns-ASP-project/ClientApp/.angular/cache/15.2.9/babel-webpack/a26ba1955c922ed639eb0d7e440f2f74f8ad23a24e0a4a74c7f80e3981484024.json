{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs';\nlet AddNewComponent = class AddNewComponent {\n  constructor(fb, returnService, router, appService, userService, customerService, productService, faultService, ownerService) {\n    this.fb = fb;\n    this.returnService = returnService;\n    this.router = router;\n    this.appService = appService;\n    this.userService = userService;\n    this.customerService = customerService;\n    this.productService = productService;\n    this.faultService = faultService;\n    this.ownerService = ownerService;\n    this.batchDateToggle = false;\n    this.customer = {};\n    this.product = {};\n    this.fault = {};\n    this.owner = {};\n    this.custIdFromTemplate = '';\n    this.prodIdFromTemplate = '';\n    this.faultIdFromTemplate = '';\n    this.ownerIdFromTemplate = '';\n    this.customerList = [];\n    this.productList = [];\n    this.faultList = [];\n    this.ownerList = [];\n    this.notFound = 'Not Found';\n    this.notLoaded = 'Not Loaded';\n    this.formInvalid = '';\n    this.form = this.fb.group({\n      customer: ['', Validators.required],\n      product: ['', Validators.required],\n      qtyOnDoc: [0],\n      qtyReturned: [0],\n      batchDate: [],\n      owner: [''],\n      fault: [''],\n      docNo: ['', Validators.required],\n      docDate: [, Validators.required],\n      resolved: [],\n      comment: ['']\n    });\n    this.showToast = false;\n    this.message = 'Something went wrong';\n    this.custFormatter = customer => customer.customerName;\n    this.prodFormatter = product => product.productName;\n    this.faultFormatter = fault => fault.name;\n    this.ownerFormatter = owner => owner.firstName;\n    //Gets all customers for searchbox\n    this.searchCust = text$ => {\n      this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError);\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.customerList.filter(customer => new RegExp(term, 'mi').test(customer.customerName)).slice(0, 10)));\n    };\n    //Gets all products for searchbox\n    this.searchProd = text$ => {\n      this.productService.searchProduct().subscribe(p => this.productList = p, this.handleError);\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.productList.filter(product => new RegExp(term, 'mi').test(product.productName)).slice(0, 10)));\n    };\n    //Gets all faults for searchbox\n    this.searchFault = text$ => {\n      this.faultService.searchFault().subscribe(f => this.faultList = f, this.handleError);\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.faultList.filter(fault => new RegExp(term, 'mi').test(fault.name)).slice(0, 10)));\n    };\n    //Gets all owners for searchbox\n    this.searchOwner = text$ => {\n      this.ownerService.searchOwner().subscribe(o => this.ownerList = o, this.handleError);\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.ownerList.filter(owner => new RegExp(term, 'mi').test(owner.firstName)).slice(0, 10)));\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        this.router.navigate(['/search-returns']);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {}\n  //Gets the id and name of the model in the search criteria\n  getModel(modelName, type) {\n    let modelFound = [];\n    //Get the type of model\n    if (type == 'customerType') {\n      let customerFound = this.customerList.filter(c => c.customerName == modelName);\n      console.log(customerFound.length);\n      if (customerFound.length > 0) {\n        customerFound.map(c => {\n          this.custIdFromTemplate = c.id;\n          this.customer.customerName = c.customerName;\n        });\n      } else {\n        this.custIdFromTemplate = this.notFound;\n      }\n    }\n    if (type == 'productType') {\n      let productFound = this.productList.filter(p => p.productName == modelName);\n      if (productFound.length > 0) {\n        productFound.map(p => {\n          this.prodIdFromTemplate = p.id;\n          this.product.productName = p.productName;\n        });\n      } else {\n        this.prodIdFromTemplate = 'Not Found';\n      }\n    }\n    if (type == 'faultType') {\n      let faultFound = this.faultList.filter(f => f.name == modelName);\n      if (faultFound.length > 0) {\n        faultFound.map(f => {\n          this.faultIdFromTemplate = f.id;\n          this.fault.name = f.name;\n        });\n      } else {\n        this.faultIdFromTemplate = 'Not Found';\n      }\n    }\n    if (type == 'ownerType') {\n      let ownerFound = this.ownerList.filter(o => o.firstName == modelName);\n      if (ownerFound.length > 0) {\n        ownerFound.map(o => {\n          this.ownerIdFromTemplate = o.id;\n          this.owner.firstName = o.firstName;\n        });\n      } else {\n        this.ownerIdFromTemplate = 'Not Found';\n      }\n    }\n  }\n  toggleBatch() {\n    this.batchDateToggle = !this.batchDateToggle;\n  }\n  save() {\n    if (this.form.invalid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.message = 'Return Saved';\n    this.showToast = true;\n    const createdReturn = {\n      docDate: this.form.get('docDate')?.value,\n      customerId: this.form.get('customer')?.value,\n      productId: this.form.get('product')?.value,\n      qtyOnDoc: this.form.get('qtyOnDoc')?.value,\n      batchDate: this.form.get('batchDate')?.value,\n      ownerId: this.form.get('owner')?.value,\n      faultId: this.form.get('fault')?.value,\n      docNo: this.form.get('docNo')?.value,\n      qtyReturned: this.form.get('qtyReturned')?.value,\n      resolved: JSON.parse(this.form.controls.resolved.value),\n      comment: this.form.get('comment')?.value\n    };\n    this.returnService.createReturnReturn({\n      body: createdReturn\n    }).subscribe(_ => {\n      this.appService.setMessage(this.message);\n      this.appService.showToast(this.showToast);\n    }, this.handleError);\n    this.router.navigate(['/search-returns']);\n  }\n  get getCustomer() {\n    return this.form.controls.customer;\n  }\n  get getProduct() {\n    return this.form.controls.product;\n  }\n  get getDocDate() {\n    return this.form.controls.docDate;\n  }\n  get getDocNo() {\n    return this.form.controls.docNo;\n  }\n};\nAddNewComponent = __decorate([Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.css']\n})], AddNewComponent);\nexport { AddNewComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","debounceTime","distinctUntilChanged","filter","map","AddNewComponent","constructor","fb","returnService","router","appService","userService","customerService","productService","faultService","ownerService","group","customer","required","product","qtyOnDoc","qtyReturned","batchDate","owner","fault","docNo","docDate","resolved","comment","customerName","productName","name","firstName","text$","searchCustomer","subscribe","c","customerList","handleError","pipe","term","length","RegExp","test","slice","searchProduct","p","productList","searchFault","f","faultList","searchOwner","o","ownerList","err","status","navigate","console","log","statusText","ngOnInit","getModel","modelName","type","modelFound","customerFound","custIdFromTemplate","id","notFound","productFound","prodIdFromTemplate","faultFound","faultIdFromTemplate","ownerFound","ownerIdFromTemplate","toggleBatch","batchDateToggle","save","form","invalid","markAllAsTouched","message","showToast","createdReturn","get","value","customerId","productId","ownerId","faultId","JSON","parse","controls","createReturnReturn","body","_","setMessage","getCustomer","getProduct","getDocDate","getDocNo","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Rowan\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\add-new\\add-new.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { debounceTime, distinctUntilChanged, filter, map, Observable, OperatorFunction } from 'rxjs';\r\nimport { CustomerRm, FaultRm, OwnerRm, ProductRm, ReturnDto, ReturnRm } from '../api/models';\r\nimport { CustomerService, FaultService, OwnerService, ProductService, ReturnService, UserService } from '../api/services';\r\nimport { AppService } from '../app.service';\r\n\n@Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.css']\n})\nexport class AddNewComponent implements OnInit {\n\n  batchDateToggle = false;\n\n  constructor(private fb: FormBuilder, private returnService: ReturnService, private router: Router, private appService: AppService, private userService: UserService,\r\n    private customerService: CustomerService, private productService: ProductService, private faultService: FaultService, private ownerService: OwnerService) { }\n\n  customer: CustomerRm = {}\r\n  product: ProductRm = {}\r\n  fault: FaultRm = {}\r\n  owner: OwnerRm = {}\r\n  custIdFromTemplate = ''\r\n  prodIdFromTemplate = ''\r\n  faultIdFromTemplate = ''\r\n  ownerIdFromTemplate = ''\r\n\r\n  customerList: CustomerRm[] = []\r\n  productList: ProductRm[] = []\r\n  faultList: FaultRm[] = []\r\n  ownerList: OwnerRm[] = []\n\n  notFound = 'Not Found'\r\n  notLoaded = 'Not Loaded'\r\n  formInvalid = ''\n\n  ngOnInit(): void {\n  }\n\n  form = this.fb.group({\r\n    customer: ['', Validators.required],\r\n    product: ['', Validators.required],\r\n    qtyOnDoc: [0],\r\n    qtyReturned: [0],\r\n    batchDate: [],\r\n    owner: [''],\r\n    fault: [''],\r\n    docNo: ['', Validators.required],\r\n    docDate: [,Validators.required],\r\n    resolved: [],\r\n    comment: ['']\r\n  })\r\n\r\n  showToast = false;\r\n  message = 'Something went wrong'\r\n\n  custFormatter = (customer: CustomerRm) => customer.customerName!\r\n  prodFormatter = (product: ProductRm) => product.productName!\r\n  faultFormatter = (fault: FaultRm) => fault.name!\r\n  ownerFormatter = (owner: OwnerRm) => owner.firstName!\r\n\r\n  //Gets all customers for searchbox\r\n  searchCust: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    this.customerService.searchCustomer().subscribe(c => this.customerList = c, this.handleError)\r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.customerList.filter((customer) => new RegExp(term, 'mi').test(customer.customerName!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all products for searchbox\r\n  searchProd: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    this.productService.searchProduct().subscribe(p => this.productList = p, this.handleError)\r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.productList.filter((product) => new RegExp(term, 'mi').test(product.productName!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all faults for searchbox\r\n  searchFault: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    this.faultService.searchFault().subscribe(f => this.faultList = f, this.handleError)\r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.faultList.filter((fault) => new RegExp(term, 'mi').test(fault.name!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets all owners for searchbox\r\n  searchOwner: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    this.ownerService.searchOwner().subscribe(o => this.ownerList = o, this.handleError)\r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.ownerList.filter((owner) => new RegExp(term, 'mi').test(owner.firstName!)).slice(0, 10))\r\n    );\r\n  }\r\n\r\n  //Gets the id and name of the model in the search criteria\r\n  getModel(modelName: string, type: string) {\r\n    let modelFound: any[] = []\r\n\r\n    //Get the type of model\r\n    if (type == 'customerType') {\r\n      let customerFound = this.customerList.filter(c => c.customerName == modelName)\r\n      console.log(customerFound.length)\r\n      if (customerFound.length > 0) {\r\n        customerFound.map(c => { this.custIdFromTemplate = c.id!; this.customer.customerName = c.customerName! })\r\n      }\r\n      else {\r\n        this.custIdFromTemplate = this.notFound\r\n      }\r\n    }\r\n\r\n    if (type == 'productType') {\r\n      let productFound = this.productList.filter(p => p.productName == modelName)\r\n      if (productFound.length > 0) {\r\n        productFound.map(p => { this.prodIdFromTemplate = p.id!; this.product.productName = p.productName! })\r\n      }\r\n      else {\r\n        this.prodIdFromTemplate = 'Not Found'\r\n      }\r\n    }\r\n    if (type == 'faultType') {\r\n      let faultFound = this.faultList.filter(f => f.name == modelName)\r\n      if (faultFound.length > 0) {\r\n        faultFound.map(f => { this.faultIdFromTemplate = f.id!; this.fault.name = f.name! })\r\n      }\r\n      else {\r\n        this.faultIdFromTemplate = 'Not Found'\r\n      }\r\n    }\r\n    if (type == 'ownerType') {\r\n      let ownerFound = this.ownerList.filter(o => o.firstName == modelName)\r\n      if (ownerFound.length > 0) {\r\n        ownerFound.map(o => { this.ownerIdFromTemplate = o.id!; this.owner.firstName = o.firstName! })\r\n      }\r\n      else {\r\n        this.ownerIdFromTemplate = 'Not Found'\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n\n\n  toggleBatch() {\n    this.batchDateToggle = !this.batchDateToggle;\r\n  }\n\n  save() {\r\n    if (this.form.invalid) {\r\n      this.form.markAllAsTouched()\r\n      return\r\n    }\r\n\r\n    this.message = 'Return Saved'\r\n    this.showToast = true\r\n\r\n    const createdReturn: ReturnDto = {\r\n      docDate: this.form.get('docDate')?.value!,\r\n      customerId: this.form.get('customer')?.value!,\r\n      productId: this.form.get('product')?.value!,\r\n      qtyOnDoc: this.form.get('qtyOnDoc')?.value!,\r\n      batchDate: this.form.get('batchDate')?.value!,\r\n      ownerId: this.form.get('owner')?.value!,\r\n      faultId: this.form.get('fault')?.value!,\r\n      docNo: this.form.get('docNo')?.value!,\r\n      qtyReturned: this.form.get('qtyReturned')?.value!,\r\n      resolved: JSON.parse(this.form.controls.resolved.value!),\r\n      comment: this.form.get('comment')?.value!\r\n    }\r\n\r\n\r\n\r\n    this.returnService.createReturnReturn({ body: createdReturn }).subscribe(_ => { this.appService.setMessage(this.message); this.appService.showToast(this.showToast) }, this.handleError)\r\n    this.router.navigate(['/search-returns'])\r\n  }\n\n  private handleError = (err: any) => {\r\n\r\n    if (err.status == 404) {\r\n      this.router.navigate(['/search-returns'])\r\n    }\r\n\r\n    console.log(\"Response Error. Status: \", err.status)\r\n    console.log(\"Response Error. Status: \", err.statusText)\r\n    console.log(err);\r\n  }\n\n  get getCustomer() {\r\n    return this.form.controls.customer\r\n  }\r\n\r\n  get getProduct() {\r\n    return this.form.controls.product\r\n  }\n\n  get getDocDate() {\n    return this.form.controls.docDate\r\n  }\n\n  get getDocNo() {\n    return this.form.controls.docNo\r\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}