{"ast":null,"code":"var _class;\nimport { formatDate } from '@angular/common';\nimport { LOCALE_ID } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api/services\";\nimport * as i3 from \"../auth/auth.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../app.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@ng-bootstrap/ng-bootstrap\";\nconst _c0 = [\"resolvedDropdown\"];\nfunction ReturnDetailComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Customer is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReturnDetailComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵtemplate(1, ReturnDetailComponent_div_10_div_1_Template, 2, 0, \"div\", 53);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.getCustomer.errors == null ? null : ctx_r0.getCustomer.errors[\"required\"]);\n  }\n}\nfunction ReturnDetailComponent_div_27_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Product is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReturnDetailComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵtemplate(1, ReturnDetailComponent_div_27_div_1_Template, 2, 0, \"div\", 53);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getProduct.errors == null ? null : ctx_r1.getProduct.errors[\"required\"]);\n  }\n}\nfunction ReturnDetailComponent_div_84_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Document Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReturnDetailComponent_div_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵtemplate(1, ReturnDetailComponent_div_84_div_1_Template, 2, 0, \"div\", 53);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.getDocNo.errors == null ? null : ctx_r4.getDocNo.errors[\"required\"]);\n  }\n}\nfunction ReturnDetailComponent_div_89_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Document Date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReturnDetailComponent_div_89_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵtemplate(1, ReturnDetailComponent_div_89_div_1_Template, 2, 0, \"div\", 53);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.getDocDate.errors == null ? null : ctx_r5.getDocDate.errors[\"required\"]);\n  }\n}\nfunction ReturnDetailComponent_option_97_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 54);\n    i0.ɵɵtext(1, \"Resolved\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReturnDetailComponent_option_98_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 55);\n    i0.ɵɵtext(1, \"Investigate\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReturnDetailComponent_option_99_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 55);\n    i0.ɵɵtext(1, \"Investigate\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReturnDetailComponent_option_100_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 54);\n    i0.ɵɵtext(1, \"Resolved\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function () {\n  return [\"/customer-detail\"];\n};\nconst _c2 = function () {\n  return [\"/product-detail\"];\n};\nconst _c3 = function () {\n  return [\"/owner-detail\"];\n};\nconst _c4 = function () {\n  return [\"/fault-detail\"];\n};\nconst _c5 = function () {\n  return [\"/\"];\n};\nexport class ReturnDetailComponent {\n  //form: FormGroup;\n  constructor(route, returnService, router, authService, fb, locale, appService, userService, customerService, productService, faultService, ownerService) {\n    /*    this.form = this.fb.group({})*/\n    this.route = route;\n    this.returnService = returnService;\n    this.router = router;\n    this.authService = authService;\n    this.fb = fb;\n    this.locale = locale;\n    this.appService = appService;\n    this.userService = userService;\n    this.customerService = customerService;\n    this.productService = productService;\n    this.faultService = faultService;\n    this.ownerService = ownerService;\n    this.returnId = 'not loaded';\n    this.batchDateDisable = false;\n    this.return = {};\n    this.customer = {};\n    this.product = {};\n    this.fault = {};\n    this.owner = {};\n    this.customerList = [];\n    this.message = 'Something went wrong...';\n    this.showToast = false;\n    this.userId = 'not loaded';\n    this.form = this.fb.group({\n      customer: ['', Validators.required],\n      product: ['', Validators.required],\n      qtyOnDoc: [0],\n      qtyReturned: [0],\n      batchDate: [''],\n      owner: [''],\n      fault: [''],\n      docNo: ['', Validators.required],\n      docDate: ['', Validators.required],\n      resolved: [true],\n      comment: ['']\n    });\n    this.formatter = customer => customer.customerName;\n    this.search = text$ => text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => states.filter(state => new RegExp(term, 'mi').test(state.name)).slice(0, 10)));\n    this.findReturn = returnId => {\n      this.returnId = returnId ?? 'not passed';\n      this.returnService.findReturn({\n        id: this.returnId\n      }).subscribe(r => {\n        this.return = r;\n        this.customerService.findCustomer({\n          id: r.customerId\n        }).subscribe(c => this.setCustomerName(c), this.handleError);\n        this.productService.findProduct({\n          id: r.productId\n        }).subscribe(p => this.setProductName(p), this.handleError);\n        this.faultService.findFault({\n          id: r.faultId\n        }).subscribe(f => this.setFaultName(f), this.handleError);\n        this.ownerService.findOwner({\n          id: r.ownerId\n        }).subscribe(o => this.setOwnerName(o), this.handleError);\n        //this.userService.findUser({ }) set up endpoint to find user by Id as well\n      }, this.handleError);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        this.router.navigate(['/search-returns']);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status: \", err.statusText);\n      console.log(err);\n    };\n    //use again if default resolved dropdown does not work again.\n    //this.form.controls['resolved'].setValue(\"Test\", { onlySelf: true });\n  }\n\n  ngAfterViewInit() {}\n  ngOnInit() {\n    if (!this.authService.currentUser) {\n      this.router.navigate(['/register-user']);\n    }\n    this.userService.findUser({\n      email: this.authService.currentUser?.email\n    }).subscribe(u => this.getUserId(u.id));\n    this.route.paramMap.subscribe(p => this.findReturn(p.get(\"returnId\")));\n    this.customerService.searchCustomer().subscribe(c => {\n      this.customerList = c;\n      console.log(this.customerList);\n    }, this.handleError);\n  }\n  toggleBatch() {\n    this.batchDateDisable = !this.batchDateDisable;\n    if (this.batchDateDisable == true && this.return.batchDate?.length > 1) {\n      this.form.controls['batchDate'].disable();\n      this.form.controls.batchDate.setValue(null);\n    } else if (this.batchDateDisable == false && this.return.batchDate?.length > 1) {\n      this.form.controls['batchDate'].enable();\n    } else if (this.batchDateDisable == true) {\n      this.form.controls['batchDate'].enable();\n      this.form.controls.batchDate.setValue(null);\n    } else if (this.batchDateDisable == false) {\n      this.form.controls['batchDate'].disable();\n    }\n  }\n  getUserId(userId) {\n    this.userId = userId;\n  }\n  setCustomerName(customer) {\n    this.customer = customer;\n  }\n  setProductName(product) {\n    this.product = product;\n  }\n  setFaultName(fault) {\n    this.fault = fault;\n  }\n  setOwnerName(owner) {\n    this.owner = owner;\n  }\n  //Get by Id's\n  //private getCustomerIdByName(customerName: string): string {\n  //  let customer = 'Not found'\n  //  this.customerService.findByNameCustomer({ name: customerName }).subscribe(c => customerName = c.customerName!)\n  //  return customer\n  //}\n  update() {\n    //console.log(this.batchDate.value + ' ' + this.docDate.value)\n    if (!this.getCustomer.touched || !this.getCustomer.dirty) {\n      this.form.controls.customer.setValue(this.customer.customerName);\n    }\n    if ((!this.getDocDate.touched || !this.getDocDate.dirty) && this.getDocDate.value != '') {\n      this.form.controls.docDate.setValue(formatDate(this.return.docDate, 'yyyy-MM-dd', this.locale));\n    }\n    if (!this.getDocDate.touched || !this.getDocDate.dirty && this.getDocDate.value == null) {\n      this.form.controls.docDate.setValue(this.return.docDate);\n    }\n    if (!this.getProduct.touched || !this.getProduct.dirty) {\n      this.form.controls.product.setValue(this.product.productName);\n    }\n    if (!this.getQtyOnDoc.touched || !this.getQtyOnDoc.dirty) {\n      this.form.controls.qtyOnDoc.setValue(this.return.qtyOnDoc);\n    }\n    if ((!this.getBatchDate.touched || !this.getBatchDate.dirty) && this.getBatchDate.value != null) {\n      this.form.controls.batchDate.setValue(formatDate(this.return.batchDate, 'yyyy-MM-dd', this.locale));\n    }\n    if (!this.getBatchDate.touched || !this.getBatchDate.dirty && this.getBatchDate.value == null) {\n      this.form.controls.batchDate.setValue(this.return.batchDate);\n    }\n    if (!this.getOwner.touched || !this.getOwner.dirty) {\n      this.form.controls.owner.setValue(this.owner.firstName);\n    }\n    if (!this.getFault.touched || !this.getFault.dirty) {\n      this.form.controls.fault.setValue(this.fault.name);\n    }\n    if (!this.getDocNo.touched || !this.getDocNo.dirty) {\n      this.form.controls.docNo.setValue(this.return.docNo);\n    }\n    if (!this.getQtyReturned.touched || !this.getQtyReturned.dirty) {\n      this.form.controls.qtyReturned.setValue(this.return.qtyReturned);\n    }\n    if (!this.getResolved.touched || !this.getResolved.dirty) {\n      this.form.controls.resolved.setValue(this.return.resolved);\n    }\n    if (!this.getComment.touched || !this.getComment.dirty) {\n      this.form.controls.comment.setValue(this.return.comment);\n    }\n    //Conver objects to id's\n    let editedReturn = {\n      id: this.returnId,\n      docDate: this.form.controls.docDate.value,\n      customerId: this.form.controls.customer.value,\n      productId: this.form.controls.product.value,\n      qtyOnDoc: this.form.controls.qtyOnDoc.value,\n      batchDate: this.form.controls.batchDate.value,\n      ownerId: this.form.controls.owner.value,\n      faultId: this.form.controls.fault.value,\n      docNo: this.form.controls.docNo.value,\n      qtyReturned: this.form.controls.qtyReturned.value,\n      resolved: this.form.controls.resolved.value,\n      comment: this.form.controls.comment.value\n    };\n    if (this.form.invalid) {\n      //this.form.markAllAsTouched();\n      return;\n    }\n    if (this.form.valid && this.form.dirty && this.form.touched) {\n      this.message = 'Return updated successfully';\n      this.showToast = true;\n    } else if (this.form.valid && !this.form.touched && !this.form.dirty) {\n      this.message = 'Nothing updated';\n      this.showToast = true;\n    }\n    this.returnService.updateReturnReturn({\n      id: this.returnId,\n      body: editedReturn\n    }).subscribe(_ => {\n      this.appService.setMessage(this.message);\n      this.appService.showToast(this.showToast);\n    }, this.handleError);\n    this.router.navigate(['/']);\n  }\n  //getters\n  get getDocDate() {\n    return this.form.controls.docDate;\n  }\n  get getCustomer() {\n    return this.form.controls.customer;\n  }\n  get getProduct() {\n    return this.form.controls.product;\n  }\n  get getQtyOnDoc() {\n    return this.form.controls.qtyOnDoc;\n  }\n  get getBatchDate() {\n    return this.form.controls.batchDate;\n  }\n  get getOwner() {\n    return this.form.controls.owner;\n  }\n  get getFault() {\n    return this.form.controls.fault;\n  }\n  get getDocNo() {\n    return this.form.controls.docNo;\n  }\n  get getQtyReturned() {\n    return this.form.controls.qtyReturned;\n  }\n  get getResolved() {\n    return this.form.controls.resolved;\n  }\n  get getComment() {\n    return this.form.controls.comment;\n  }\n}\n_class = ReturnDetailComponent;\n_class.ɵfac = function ReturnDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ReturnService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(LOCALE_ID), i0.ɵɵdirectiveInject(i5.AppService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i2.CustomerService), i0.ɵɵdirectiveInject(i2.ProductService), i0.ɵɵdirectiveInject(i2.FaultService), i0.ɵɵdirectiveInject(i2.OwnerService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-return-detail\"]],\n  viewQuery: function ReturnDetailComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resolvedDropdownRef = _t.first);\n    }\n  },\n  decls: 114,\n  vars: 42,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"center\", \"shadow-custom\", \"mb-3\"], [1, \"container\"], [1, \"row\"], [1, \"mb-3\", \"col-12\"], [1, \"form-label\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"input-group\"], [\"formControlName\", \"customer\", \"list\", \"customerList\", 1, \"form-control\", 3, \"value\"], [\"id\", \"customerList\"], [\"value\", \"customerList.customer.customerName\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"routerLink\"], [1, \"form-label\", \"col-xs-3\", \"col-sm-auto\", \"col-form-label\"], [1, \"col\"], [\"id\", \"customerNameList\", \"type\", \"text\", \"formcontrolName\", \"customer\", 1, \"form-control\", 3, \"ngModel\", \"ngbTypeahead\", \"inputFormatter\", \"resultFormatter\", \"editable\", \"ngModelChange\"], [\"formControlName\", \"product\", \"list\", \"productDatalist\", 1, \"form-control\", 3, \"value\"], [\"id\", \"productDatalist\"], [\"value\", \"Milk\"], [\"value\", \"Bread\"], [\"value\", \"Eggs\"], [1, \"mb-3\", \"col-6\"], [\"formControlName\", \"qtyOnDoc\", \"type\", \"number\", \"min\", \"0\", 1, \"form-control\", 3, \"value\"], [\"formControlName\", \"qtyReturned\", \"type\", \"number\", \"min\", \"0\", 1, \"form-control\", 3, \"value\"], [1, \"col-12\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\"], [1, \"me-3\"], [\"type\", \"checkbox\", 1, \"form-check-input\", \"mt-0\", 3, \"checked\", \"change\"], [\"batchChecked\", \"\"], [\"formControlName\", \"batchDate\", \"type\", \"date\", 1, \"form-control\", 3, \"readonly\", \"value\"], [\"batchDateBox\", \"\"], [\"formControlName\", \"owner\", \"list\", \"ownerDatalist\", 1, \"form-control\", 3, \"value\"], [\"id\", \"ownerDatalist\"], [\"value\", \"John\"], [\"value\", \"Mary\"], [\"value\", \"Paul\"], [\"formControlName\", \"fault\", \"list\", \"faultDatalist\", 1, \"form-control\", 3, \"value\"], [\"id\", \"faultDatalist\"], [\"value\", \"Mouldy\"], [\"value\", \"Sour\"], [\"value\", \"Expired\"], [\"formControlName\", \"docNo\", \"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"formControlName\", \"docDate\", \"type\", \"date\", 1, \"form-control\", 3, \"value\"], [\"formControlName\", \"resolved\", 1, \"form-select\"], [\"value\", \"true\", 4, \"ngIf\"], [\"value\", \"false\", 4, \"ngIf\"], [\"formControlName\", \"comment\", \"rows\", \"3\", \"maxlength\", \"255\", 1, \"form-control\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"button\", 1, \"btn-outline-danger\", \"btn\", \"col-6\", 3, \"routerLink\"], [1, \"fa\", \"fa-cancel\"], [\"type\", \"submit\", 1, \"btn-outline-success\", \"btn\", \"col-6\"], [1, \"fa\", \"fa-save\"], [1, \"invalid-feedback\", \"d-block\"], [4, \"ngIf\"], [\"value\", \"true\"], [\"value\", \"false\"]],\n  template: function ReturnDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ReturnDetailComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"div\", 3)(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, ReturnDetailComponent_div_10_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementStart(11, \"div\", 7);\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementStart(13, \"datalist\", 9);\n      i0.ɵɵelement(14, \"option\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 11);\n      i0.ɵɵtext(16, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 12);\n      i0.ɵɵtext(19, \"Customer Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 13)(21, \"div\", 7)(22, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function ReturnDetailComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.customerList = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"div\", 4)(25, \"label\", 5);\n      i0.ɵɵtext(26, \"Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, ReturnDetailComponent_div_27_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementStart(28, \"div\", 7);\n      i0.ɵɵelement(29, \"input\", 15);\n      i0.ɵɵelementStart(30, \"datalist\", 16);\n      i0.ɵɵelement(31, \"option\", 17)(32, \"option\", 18)(33, \"option\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 11);\n      i0.ɵɵtext(35, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(36, \"div\", 3)(37, \"div\", 20)(38, \"label\", 5);\n      i0.ɵɵtext(39, \"Qty on Document\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 20)(42, \"label\", 5);\n      i0.ɵɵtext(43, \"Qty Returned\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(45, \"div\", 3)(46, \"div\", 23)(47, \"div\", 24)(48, \"div\", 25)(49, \"span\", 26);\n      i0.ɵɵtext(50, \"No Batch Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"input\", 27, 28);\n      i0.ɵɵlistener(\"change\", function ReturnDetailComponent_Template_input_change_51_listener() {\n        return ctx.toggleBatch();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(53, \"input\", 29, 30);\n      i0.ɵɵpipe(55, \"date\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(56, \"div\", 3)(57, \"div\", 4)(58, \"label\", 5);\n      i0.ɵɵtext(59, \"Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"div\", 7);\n      i0.ɵɵelement(61, \"input\", 31);\n      i0.ɵɵelementStart(62, \"datalist\", 32);\n      i0.ɵɵelement(63, \"option\", 33)(64, \"option\", 34)(65, \"option\", 35);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"button\", 11);\n      i0.ɵɵtext(67, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(68, \"div\", 3)(69, \"div\", 4)(70, \"label\", 5);\n      i0.ɵɵtext(71, \"Fault\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(72, \"div\", 7);\n      i0.ɵɵelement(73, \"input\", 36);\n      i0.ɵɵelementStart(74, \"datalist\", 37);\n      i0.ɵɵelement(75, \"option\", 38)(76, \"option\", 39)(77, \"option\", 40);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(78, \"button\", 11);\n      i0.ɵɵtext(79, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(80, \"div\", 3)(81, \"div\", 20)(82, \"label\", 5);\n      i0.ɵɵtext(83, \"External Document No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(84, ReturnDetailComponent_div_84_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelement(85, \"input\", 41);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(86, \"div\", 20)(87, \"label\", 5);\n      i0.ɵɵtext(88, \"Document Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(89, ReturnDetailComponent_div_89_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelement(90, \"input\", 42);\n      i0.ɵɵpipe(91, \"date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(92, \"div\", 3)(93, \"div\", 20)(94, \"label\", 5);\n      i0.ɵɵtext(95, \"Investigate / Resolved\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(96, \"select\", 43);\n      i0.ɵɵtemplate(97, ReturnDetailComponent_option_97_Template, 2, 0, \"option\", 44);\n      i0.ɵɵtemplate(98, ReturnDetailComponent_option_98_Template, 2, 0, \"option\", 45);\n      i0.ɵɵtemplate(99, ReturnDetailComponent_option_99_Template, 2, 0, \"option\", 45);\n      i0.ɵɵtemplate(100, ReturnDetailComponent_option_100_Template, 2, 0, \"option\", 44);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(101, \"div\", 4)(102, \"label\", 5);\n      i0.ɵɵtext(103, \"Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(104, \"textarea\", 46);\n      i0.ɵɵtext(105);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(106, \"div\", 3)(107, \"div\", 47)(108, \"button\", 48);\n      i0.ɵɵelement(109, \"i\", 49);\n      i0.ɵɵtext(110, \" Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(111, \"button\", 50);\n      i0.ɵɵelement(112, \"i\", 51);\n      i0.ɵɵtext(113, \" Save\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(52);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.getCustomer.invalid && (ctx.getCustomer.touched || ctx.getCustomer.dirty));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.customer.customerName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(37, _c1));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.customerList)(\"ngbTypeahead\", ctx.search)(\"inputFormatter\", ctx.formatter)(\"resultFormatter\", ctx.formatter)(\"editable\", false);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.getProduct.invalid && (ctx.getProduct.touched || ctx.getProduct.dirty));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.product.productName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(38, _c2));\n      i0.ɵɵadvance(6);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.return.qtyOnDoc);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.return.qtyReturned);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"checked\", ctx.return.batchDate == null ? true : false);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"readonly\", _r2.checked == true ? true : false)(\"value\", i0.ɵɵpipeBind2(55, 31, ctx.return.batchDate, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(8);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.owner.firstName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(39, _c3));\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.fault.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(40, _c4));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.getDocNo.invalid && (ctx.getDocNo.touched || ctx.getDocNo.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.return.docNo);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.getDocDate.invalid && (ctx.getDocDate.touched || ctx.getDocDate.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind2(91, 34, ctx.return.docDate, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.return.resolved == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.return.resolved == false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.return.resolved == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.return.resolved == false);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.return.comment);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(41, _c5));\n    }\n  },\n  dependencies: [i6.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.MaxLengthValidator, i4.MinValidator, i4.NgModel, i4.FormGroupDirective, i4.FormControlName, i1.RouterLink, i7.NgbTypeahead, i6.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["formatDate","LOCALE_ID","Validators","debounceTime","distinctUntilChanged","filter","map","i0","ReturnDetailComponent","constructor","route","returnService","router","authService","fb","locale","appService","userService","customerService","productService","faultService","ownerService","group","customer","required","product","qtyOnDoc","qtyReturned","batchDate","owner","fault","docNo","docDate","resolved","comment","customerName","text$","pipe","term","length","states","state","RegExp","test","name","slice","returnId","findReturn","id","subscribe","r","return","findCustomer","customerId","c","setCustomerName","handleError","findProduct","productId","p","setProductName","findFault","faultId","f","setFaultName","findOwner","ownerId","o","setOwnerName","err","status","navigate","console","log","statusText","ngAfterViewInit","ngOnInit","currentUser","findUser","email","u","getUserId","paramMap","get","searchCustomer","customerList","toggleBatch","batchDateDisable","form","controls","disable","setValue","enable","userId","update","getCustomer","touched","dirty","getDocDate","value","getProduct","productName","getQtyOnDoc","getBatchDate","getOwner","firstName","getFault","getDocNo","getQtyReturned","getResolved","getComment","editedReturn","invalid","valid","message","showToast","updateReturnReturn","body","_","setMessage","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Rowan\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\return-detail\\return-detail.component.ts","C:\\Users\\Rowan\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\return-detail\\return-detail.component.html"],"sourcesContent":["import { formatDate } from '@angular/common';\r\nimport { AfterViewInit, Component, ElementRef, Inject, LOCALE_ID, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CustomerRm, FaultRm, OwnerRm, ProductRm, ReturnDto } from '../api/models';\r\nimport { ReturnRm } from '../api/models/return-rm';\r\nimport { CustomerService, FaultService, OwnerService, ProductService, ReturnService, UserService } from '../api/services';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { AppService } from '../app.service';\r\nimport { debounceTime, distinctUntilChanged, filter, map, Observable, OperatorFunction } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-return-detail',\r\n  templateUrl: './return-detail.component.html',\r\n  styleUrls: ['./return-detail.component.css']\r\n})\r\nexport class ReturnDetailComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('resolvedDropdown', { static: true }) resolvedDropdownRef?: ElementRef<HTMLElement>;\r\n  //form: FormGroup;\r\n\r\n  constructor(private route: ActivatedRoute, private returnService: ReturnService, private router: Router, private authService: AuthService,\r\n    private fb: FormBuilder, @Inject(LOCALE_ID) private locale: string, private appService: AppService, private userService: UserService, private customerService: CustomerService,\r\n    private productService: ProductService, private faultService: FaultService, private ownerService: OwnerService  ) {\r\n\r\n/*    this.form = this.fb.group({})*/\r\n    \r\n\r\n   \r\n\r\n    //use again if default resolved dropdown does not work again.\r\n    //this.form.controls['resolved'].setValue(\"Test\", { onlySelf: true });\r\n}\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  returnId: string = 'not loaded'\r\n  batchDateDisable = false\r\n  return: ReturnRm = {}\r\n  customer: CustomerRm = {}\r\n  product: ProductRm = {}\r\n  fault: FaultRm = {}\r\n  owner: OwnerRm = {}\r\n\r\n  customerList: CustomerRm[] = []\r\n\r\n  message = 'Something went wrong...'\r\n  showToast = false;\r\n  userId = 'not loaded'\r\n\r\n  form = this.fb.group({\r\n    customer: ['', Validators.required],\r\n    product: ['', Validators.required],\r\n    qtyOnDoc: [0],\r\n    qtyReturned: [0],\r\n    batchDate: [''],\r\n    owner: [''],\r\n    fault: [''],\r\n    docNo: ['', Validators.required],\r\n    docDate: ['', Validators.required],\r\n    resolved: [true],\r\n    comment: ['']\r\n  })\r\n\r\n  formatter = (customer: CustomerRm) => customer.customerName;\r\n\r\n  search: OperatorFunction<string, readonly { id; name }[]> = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => states.filter((state) => new RegExp(term, 'mi').test(state.name)).slice(0, 10)),\r\n    );\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (!this.authService.currentUser) {\r\n      this.router.navigate(['/register-user'])\r\n    }\r\n\r\n    this.userService.findUser({ email: this.authService.currentUser?.email! }).subscribe(u => this.getUserId(u.id!))\r\n\r\n    this.route.paramMap.subscribe(p => this.findReturn(p.get(\"returnId\")));\r\n\r\n    this.customerService.searchCustomer().subscribe(c => { this.customerList = c; console.log(this.customerList) }, this.handleError)\r\n\r\n  }\r\n  \r\n  private findReturn = (returnId: string | null) => {\r\n    this.returnId = returnId ?? 'not passed';\r\n\r\n    this.returnService.findReturn({ id: this.returnId }).subscribe(r =>\r\n    {\r\n      this.return = r\r\n      this.customerService.findCustomer({ id: r.customerId! }).subscribe(c => this.setCustomerName(c), this.handleError)\r\n      this.productService.findProduct({ id: r.productId! }).subscribe(p => this.setProductName(p), this.handleError)\r\n      this.faultService.findFault({ id: r.faultId! }).subscribe(f => this.setFaultName(f), this.handleError)\r\n      this.ownerService.findOwner({ id: r.ownerId! }).subscribe(o => this.setOwnerName(o), this.handleError)\r\n      //this.userService.findUser({ }) set up endpoint to find user by Id as well\r\n    }\r\n      , this.handleError);\r\n  }\r\n\r\n  toggleBatch() {\r\n    this.batchDateDisable = !this.batchDateDisable;\r\n\r\n    if (this.batchDateDisable == true && this.return.batchDate?.length! > 1) {\r\n      this.form.controls['batchDate'].disable()\r\n      this.form.controls.batchDate.setValue(null)\r\n    }\r\n    else if (this.batchDateDisable == false && this.return.batchDate?.length! > 1) {\r\n      this.form.controls['batchDate'].enable()\r\n    }\r\n    else if (this.batchDateDisable == true ) {\r\n      this.form.controls['batchDate'].enable()\r\n      this.form.controls.batchDate.setValue(null)\r\n    }\r\n    else if (this.batchDateDisable == false) {\r\n      this.form.controls['batchDate'].disable()\r\n    }\r\n  }\r\n\r\n  private handleError = (err: any) => {\r\n\r\n    if (err.status == 404) {\r\n      this.router.navigate(['/search-returns'])\r\n    }\r\n      \r\n    console.log(\"Response Error. Status: \", err.status)\r\n    console.log(\"Response Error. Status: \", err.statusText)\r\n    console.log(err);\r\n  }\r\n\r\n  private getUserId(userId: string) {\r\n    this.userId = userId\r\n  }\r\n\r\n  private setCustomerName(customer: CustomerRm) {\r\n    this.customer = customer\r\n  }\r\n\r\n  private setProductName(product: ProductRm) {\r\n    this.product = product\r\n  }\r\n\r\n  private setFaultName(fault: FaultRm) {\r\n   this.fault = fault\r\n  }\r\n\r\n  private setOwnerName(owner: OwnerRm) {\r\n    this.owner = owner\r\n  }\r\n\r\n  //Get by Id's\r\n  //private getCustomerIdByName(customerName: string): string {\r\n  //  let customer = 'Not found'\r\n  //  this.customerService.findByNameCustomer({ name: customerName }).subscribe(c => customerName = c.customerName!)\r\n  //  return customer\r\n  //}\r\n\r\n  update() {\r\n\r\n\r\n\r\n    //console.log(this.batchDate.value + ' ' + this.docDate.value)\r\n\r\n    if (!this.getCustomer.touched || !this.getCustomer.dirty) {\r\n      this.form.controls.customer.setValue(this.customer.customerName!)\r\n    }\r\n    if ((!this.getDocDate.touched || !this.getDocDate.dirty) && this.getDocDate.value != '') {\r\n      this.form.controls.docDate.setValue(formatDate(this.return.docDate!, 'yyyy-MM-dd', this.locale))\r\n    }\r\n    if (!this.getDocDate.touched || !this.getDocDate.dirty && this.getDocDate.value == null) {\r\n      this.form.controls.docDate.setValue(this.return.docDate!)\r\n    }\r\n    if (!this.getProduct.touched || !this.getProduct.dirty) {\r\n      this.form.controls.product.setValue(this.product.productName!)\r\n    }\r\n    if (!this.getQtyOnDoc.touched || !this.getQtyOnDoc.dirty) {\r\n      this.form.controls.qtyOnDoc.setValue(this.return.qtyOnDoc!)\r\n    }\r\n    if ((!this.getBatchDate.touched || !this.getBatchDate.dirty) && this.getBatchDate.value != null) {\r\n      this.form.controls.batchDate.setValue(formatDate(this.return.batchDate!, 'yyyy-MM-dd', this.locale))\r\n    }\r\n    if (!this.getBatchDate.touched || !this.getBatchDate.dirty && this.getBatchDate.value == null) {\r\n      this.form.controls.batchDate.setValue(this.return.batchDate!)\r\n    }\r\n    if (!this.getOwner.touched || !this.getOwner.dirty) {\r\n      this.form.controls.owner.setValue(this.owner.firstName!)\r\n    }\r\n    if (!this.getFault.touched || !this.getFault.dirty) {\r\n      this.form.controls.fault.setValue(this.fault.name!)\r\n    }\r\n    if (!this.getDocNo.touched || !this.getDocNo.dirty) {\r\n      this.form.controls.docNo.setValue(this.return.docNo!)\r\n    }\r\n    if (!this.getQtyReturned.touched || !this.getQtyReturned.dirty) {\r\n      this.form.controls.qtyReturned.setValue(this.return.qtyReturned!)\r\n    }\r\n    if (!this.getResolved.touched || !this.getResolved.dirty) {\r\n      this.form.controls.resolved.setValue(this.return.resolved!)\r\n    }\r\n    if (!this.getComment.touched || !this.getComment.dirty) {\r\n      this.form.controls.comment.setValue(this.return.comment!)\r\n    }\r\n\r\n\r\n    //Conver objects to id's\r\n    let editedReturn: ReturnRm = {\r\n      id: this.returnId,\r\n      docDate: this.form.controls.docDate.value!,\r\n      customerId: this.form.controls.customer.value!,\r\n      productId: this.form.controls.product.value!,\r\n      qtyOnDoc: this.form.controls.qtyOnDoc.value!,\r\n      batchDate: this.form.controls.batchDate.value!,\r\n      ownerId: this.form.controls.owner.value!,\r\n      faultId: this.form.controls.fault.value!,\r\n      docNo: this.form.controls.docNo.value!,\r\n      qtyReturned: this.form.controls.qtyReturned.value!,\r\n      resolved: this.form.controls.resolved.value!,\r\n      comment: this.form.controls.comment.value!\r\n\r\n    }\r\n\r\n\r\n    if (this.form.invalid) {\r\n      //this.form.markAllAsTouched();\r\n      return\r\n    }\r\n    if (this.form.valid && this.form.dirty && this.form.touched) {\r\n      this.message = 'Return updated successfully'\r\n      this.showToast = true\r\n    }\r\n    else if (this.form.valid && !this.form.touched && !this.form.dirty) {\r\n      this.message = 'Nothing updated'\r\n      this.showToast = true\r\n    }\r\n  \r\n    this.returnService.updateReturnReturn({ id: this.returnId, body: editedReturn }).subscribe(_ => { this.appService.setMessage(this.message); this.appService.showToast(this.showToast)},this.handleError)\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  //getters\r\n  get getDocDate() {\r\n    return this.form.controls.docDate\r\n  }\r\n\r\n  get getCustomer() {\r\n    return this.form.controls.customer\r\n  }\r\n\r\n  get getProduct() {\r\n    return this.form.controls.product\r\n  }\r\n\r\n  get getQtyOnDoc() {\r\n    return this.form.controls.qtyOnDoc\r\n  }\r\n\r\n  get getBatchDate() {\r\n    return this.form.controls.batchDate\r\n  }\r\n\r\n  get getOwner() {\r\n    return this.form.controls.owner\r\n  }\r\n\r\n  get getFault() {\r\n    return this.form.controls.fault\r\n  }\r\n\r\n  get getDocNo() {\r\n    return this.form.controls.docNo\r\n  }\r\n\r\n  get getQtyReturned() {\r\n    return this.form.controls.qtyReturned\r\n  }\r\n\r\n  get getResolved() {\r\n    return this.form.controls.resolved\r\n  }\r\n\r\n  get getComment() {\r\n    return this.form.controls.comment\r\n  }\r\n\r\n}\r\n","<h2>Edit</h2>\r\n<hr />\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"update()\">\r\n  <div class=\"center shadow-custom mb-3\">\r\n    <div class=\"container\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Customer</label>\r\n          <div *ngIf=\"getCustomer.invalid && (getCustomer.touched || getCustomer.dirty)\" class=\"invalid-feedback d-block\">\r\n            <div *ngIf=\"getCustomer.errors?.['required']\">Customer is required</div>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input formControlName=\"customer\" class=\"form-control\" list=\"customerList\" value=\"{{customer.customerName}}\">\r\n            <datalist id=\"customerList\">\r\n              <option value=\"customerList.customer.customerName\"></option>\r\n            </datalist>\r\n            <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/customer-detail']\" type=\"button\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <label class=\"form-label col-xs-3 col-sm-auto col-form-label\">Customer Name:</label>\r\n        <div class=\"col\">\r\n          <div class=\"input-group\">\r\n            <input id=\"customerNameList\"\r\n                   type=\"text\"\r\n                   class=\"form-control\"\r\n                   [(ngModel)]=\"customerList\"\r\n                   [ngbTypeahead]=\"search\"\r\n                   [inputFormatter]=\"formatter\"\r\n                   [resultFormatter]=\"formatter\"\r\n                   [editable]=\"false\"\r\n                   formcontrolName=\"customer\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Product</label>\r\n          <div *ngIf=\"getProduct.invalid && (getProduct.touched || getProduct.dirty)\" class=\"invalid-feedback d-block\">\r\n            <div *ngIf=\"getProduct.errors?.['required']\">Product is required</div>\r\n          </div>\r\n          <div class=\"input-group\">\r\n            <input formControlName=\"product\" class=\"form-control\" list=\"productDatalist\" value=\"{{product.productName}}\">\r\n            <datalist id=\"productDatalist\">\r\n              <option value=\"Milk\">\r\n              <option value=\"Bread\">\r\n              <option value=\"Eggs\">\r\n            </datalist>\r\n            <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/product-detail']\" type=\"button\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">Qty on Document</label>\r\n          <input formControlName=\"qtyOnDoc\" type=\"number\" min=\"0\" class=\"form-control\" value=\"{{return.qtyOnDoc}}\">\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">Qty Returned</label>\r\n          <input formControlName=\"qtyReturned\" type=\"number\" min=\"0\" class=\"form-control\" value=\"{{return.qtyReturned}}\">\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"input-group-text\">\r\n              <span class=\"me-3\">No Batch Date</span>\r\n              <input class=\"form-check-input mt-0\" type=\"checkbox\" #batchChecked (change)=\"toggleBatch()\" [checked]=\"return.batchDate == null ? true : false\">\r\n            </div>\r\n            <input formControlName=\"batchDate\" type=\"date\" #batchDateBox [readonly]=\"batchChecked.checked == true ? true : false\" class=\"form-control\" [value]=\"return.batchDate | date:'yyyy-MM-dd'\">\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Owner</label>\r\n          <div class=\"input-group\">\r\n            <input formControlName=\"owner\" class=\"form-control\" list=\"ownerDatalist\" value=\"{{owner.firstName}}\">\r\n            <datalist id=\"ownerDatalist\">\r\n              <option value=\"John\">\r\n              <option value=\"Mary\">\r\n              <option value=\"Paul\">\r\n            </datalist>\r\n            <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/owner-detail']\" type=\"button\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Fault</label>\r\n          <div class=\"input-group\">\r\n            <input formControlName=\"fault\" class=\"form-control\" list=\"faultDatalist\" value=\"{{fault.name}}\">\r\n            <datalist id=\"faultDatalist\">\r\n              <option value=\"Mouldy\">\r\n              <option value=\"Sour\">\r\n              <option value=\"Expired\">\r\n            </datalist>\r\n            <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/fault-detail']\" type=\"button\">+</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">External Document No.</label>\r\n          <div *ngIf=\"getDocNo.invalid && (getDocNo.touched || getDocNo.dirty)\" class=\"invalid-feedback d-block\">\r\n            <div *ngIf=\"getDocNo.errors?.['required']\">Document Number is required</div>\r\n          </div>\r\n          <input formControlName=\"docNo\" type=\"text\" class=\"form-control\" value=\"{{return.docNo}}\">\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">Document Date</label>\r\n          <div *ngIf=\"getDocDate.invalid && (getDocDate.touched || getDocDate.dirty)\" class=\"invalid-feedback d-block\">\r\n            <div *ngIf=\"getDocDate.errors?.['required']\">Document Date is required</div>\r\n          </div>\r\n          <input formControlName=\"docDate\" type=\"date\" class=\"form-control\" [value]=\"return.docDate | date:'yyyy-MM-dd'\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"mb-3 col-6\">\r\n          <label class=\"form-label\">Investigate / Resolved</label>\r\n          <select formControlName=\"resolved\" class=\"form-select\">\r\n            <option *ngIf=\"return.resolved == true\" value=true>Resolved</option>\r\n            <option *ngIf=\"return.resolved == false\" value=false>Investigate</option>\r\n            <option *ngIf=\"return.resolved == true\" value=false>Investigate</option>\r\n            <option *ngIf=\"return.resolved == false\" value=true>Resolved</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-3 col-12\">\r\n        <label class=\"form-label\">Comment</label>\r\n        <textarea formControlName=\"comment\" class=\"form-control\" rows=\"3\" maxlength=\"255\">{{return.comment}}</textarea>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 mb-3\">\r\n          <button type=\"button\" [routerLink]=\"['/']\" class=\"btn-outline-danger btn col-6\"><i class=\"fa fa-cancel\"></i> Cancel</button>\r\n          <button type=\"submit\" class=\"btn-outline-success btn col-6\"><i class=\"fa fa-save\"></i> Save</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}