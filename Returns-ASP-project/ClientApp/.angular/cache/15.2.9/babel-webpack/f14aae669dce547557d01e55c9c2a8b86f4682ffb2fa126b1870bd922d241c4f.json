{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs';\nlet ProductDetailComponent = class ProductDetailComponent {\n  constructor(productService, activatedRoute, router, fb) {\n    this.productService = productService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.fb = fb;\n    this.product = {};\n    this.productId = '';\n    this.productAlreadyExists = 'Product already exists';\n    this.prodIdFromTemplate = '';\n    this.form = this.fb.group({\n      productName: '',\n      weight: 0.00,\n      price: 0.00,\n      shortCode: ''\n    });\n    this.findProduct = productId => {\n      this.productId = productId ?? 'Not passed';\n      this.productService.findProduct({\n        id: productId\n      }).subscribe(p => this.product = p, this.handleError);\n    };\n    this.prodFormatter = product => product.productName;\n    this.productList = [];\n    //Gets all products for searchbox\n    this.searchProd = text$ => {\n      this.productService.searchProduct().subscribe(p => {\n        this.productList = p;\n        console.log(\"SearchProd gets called\");\n      }, this.handleError);\n      return text$.pipe(debounceTime(200), distinctUntilChanged(), filter(term => term.length >= 2), map(term => this.productList.filter(product => new RegExp(term, 'mi').test(product.productName)).slice(0, 10)));\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        this.router.navigate(['/products']);\n      }\n      console.log(\"Response Error. Status: \", err.status);\n      console.log(\"Response Error. Status: \", err.statusText);\n      console.log(err);\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(r => {\n      this.findProduct(r.get(\"productId\"));\n      console.log(this.product.productName);\n    });\n  }\n  update() {}\n  productExists(modelName) {\n    this.prodIdFromTemplate = '';\n    console.log(\"productExists gets called\");\n    console.log(\"ProductName: \" + this.product.productName);\n    console.log(\"ModelName: \" + modelName);\n    if (this.product.productName != modelName) {\n      let productFound = this.productList.filter(p => p.productName == modelName);\n      if (productFound.length > 0) {\n        this.prodIdFromTemplate = this.productAlreadyExists;\n      }\n    }\n  }\n};\nProductDetailComponent = __decorate([Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})], ProductDetailComponent);\nexport { ProductDetailComponent };","map":{"version":3,"mappings":"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","names":["Component","debounceTime","distinctUntilChanged","filter","map","ProductDetailComponent","constructor","productService","activatedRoute","router","fb","group","productName","weight","price","shortCode","productId","findProduct","id","subscribe","p","product","handleError","text$","searchProduct","productList","console","log","pipe","term","length","RegExp","test","slice","err","status","navigate","statusText","ngOnInit","paramMap","r","get","update","productExists","modelName","prodIdFromTemplate","productFound","productAlreadyExists","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Rowan\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\product-detail\\product-detail.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { debounceTime, distinctUntilChanged, filter, map, Observable, OperatorFunction } from 'rxjs';\r\nimport { ProductRm } from '../api/models';\r\nimport { ProductService } from '../api/services';\r\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n\n  constructor(private productService: ProductService, private activatedRoute: ActivatedRoute, private router: Router, private fb: FormBuilder) { }\n\n  product: ProductRm = {}\n  productId = ''\n  productAlreadyExists = 'Product already exists'\n  prodIdFromTemplate = ''\n\n  form = this.fb.group({\r\n    productName: '',\r\n    weight: 0.00,\r\n    price: 0.00,\r\n    shortCode: ''\r\n  })\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(r => { this.findProduct(r.get(\"productId\")); console.log(this.product.productName) })\n  }\n\n\n  findProduct = (productId: string | null) => {\n    this.productId = productId ?? 'Not passed'\n    this.productService.findProduct({ id: productId! }).subscribe(p => this.product = p,this.handleError)\r\n  }\n\n  prodFormatter = (product: ProductRm) => product.productName!\n\n  productList: ProductRm[] = []\n\n  //Gets all products for searchbox\r\n  searchProd: OperatorFunction<string, readonly { id?: string | undefined | null; name?: string | undefined | null }[]> = (text$: Observable<string>) => {\r\n    this.productService.searchProduct().subscribe(p => { this.productList = p; console.log(\"SearchProd gets called\") }, this.handleError)\r\n\r\n    return text$.pipe(\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      filter((term) => term.length >= 2),\r\n      map((term) => this.productList.filter((product) => new RegExp(term, 'mi').test(product.productName!)).slice(0, 10))\r\n    );\r\n  }\n\n  private handleError = (err: any) => {\r\n\r\n    if (err.status == 404) {\r\n      this.router.navigate(['/products'])\r\n    }\r\n\r\n    console.log(\"Response Error. Status: \", err.status)\r\n    console.log(\"Response Error. Status: \", err.statusText)\r\n    console.log(err);\r\n  }\n\n  update() {\n\r\n  }\n\n  productExists(modelName: string) {\r\n    this.prodIdFromTemplate = ''\r\n    console.log(\"productExists gets called\")\r\n    console.log(\"ProductName: \" + this.product.productName)\r\n    console.log(\"ModelName: \" + modelName)\r\n    if (this.product.productName != modelName) {\r\n      let productFound = this.productList.filter(p => p.productName == modelName)\r\n      if (productFound.length > 0) {\r\n        this.prodIdFromTemplate = this.productAlreadyExists\r\n      }\r\n    }\r\n      \r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}