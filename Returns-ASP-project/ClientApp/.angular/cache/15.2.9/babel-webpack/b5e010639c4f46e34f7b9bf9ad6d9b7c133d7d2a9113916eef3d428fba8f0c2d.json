{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api/services\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../app.service\";\nimport * as i5 from \"@angular/common\";\nfunction AddNewComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Customer is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtemplate(1, AddNewComponent_div_10_div_1_Template, 2, 0, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.customer.errors == null ? null : ctx_r0.customer.errors[\"required\"]);\n  }\n}\nfunction AddNewComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Product is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtemplate(1, AddNewComponent_div_25_div_1_Template, 2, 0, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.product.errors == null ? null : ctx_r1.product.errors[\"required\"]);\n  }\n}\nfunction AddNewComponent_div_81_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Document number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewComponent_div_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtemplate(1, AddNewComponent_div_81_div_1_Template, 2, 0, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.docNo.errors == null ? null : ctx_r4.docNo.errors[\"required\"]);\n  }\n}\nfunction AddNewComponent_div_86_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Document date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddNewComponent_div_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵtemplate(1, AddNewComponent_div_86_div_1_Template, 2, 0, \"div\", 54);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.docDate.errors == null ? null : ctx_r5.docDate.errors[\"required\"]);\n  }\n}\nconst _c0 = function () {\n  return [\"/customer-detail\"];\n};\nconst _c1 = function () {\n  return [\"/product-detail\"];\n};\nconst _c2 = function () {\n  return [\"/owner-detail\"];\n};\nconst _c3 = function () {\n  return [\"/fault-detail\"];\n};\nconst _c4 = function () {\n  return [\"/\"];\n};\nexport class AddNewComponent {\n  constructor(fb, returnService, router, appService) {\n    this.fb = fb;\n    this.returnService = returnService;\n    this.router = router;\n    this.appService = appService;\n    this.batchDateToggle = false;\n    this.form = this.fb.group({\n      customer: ['', Validators.required],\n      product: ['', Validators.required],\n      qtyOnDoc: [0],\n      qtyReturned: [0],\n      batchDate: [],\n      owner: [''],\n      fault: [''],\n      docNo: ['', Validators.required],\n      docDate: [, Validators.required],\n      resolved: [],\n      comment: ['']\n    });\n  }\n  ngOnInit() {}\n}\n_class = AddNewComponent;\n_class.ɵfac = function AddNewComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ReturnService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AppService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-new\"]],\n  decls: 109,\n  vars: 16,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"center\", \"shadow-custom\", \"mb-3\"], [1, \"container\"], [1, \"row\"], [1, \"mb-3\", \"col-12\"], [1, \"form-label\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"input-group\"], [\"formControlName\", \"customer\", \"list\", \"customerDataList\", 1, \"form-control\"], [\"id\", \"customerDataList\"], [\"value\", \"Spar\"], [\"value\", \"Checkers\"], [\"value\", \"Shoprite\"], [\"value\", \"Engen\"], [\"value\", \"Woolworths\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"routerLink\"], [\"formControlName\", \"product\", \"list\", \"productDatalist\", 1, \"form-control\"], [\"id\", \"productDatalist\"], [\"value\", \"Milk\"], [\"value\", \"Bread\"], [\"value\", \"Eggs\"], [1, \"mb-3\", \"col-6\"], [\"formControlName\", \"qtyOnDoc\", \"type\", \"number\", \"min\", \"0\", 1, \"form-control\"], [\"formControlName\", \"qtyReturned\", \"type\", \"number\", \"min\", \"0\", 1, \"form-control\"], [1, \"col-12\"], [1, \"input-group\", \"mb-3\"], [1, \"input-group-text\"], [1, \"me-3\"], [\"type\", \"checkbox\", 1, \"form-check-input\", \"mt-0\", 3, \"change\"], [\"batchChecked\", \"\"], [\"formControlName\", \"batchDate\", \"type\", \"date\", 1, \"form-control\", 3, \"readonly\"], [\"batchDateBox\", \"\"], [\"formControlName\", \"owner\", \"list\", \"ownerDatalist\", 1, \"form-control\"], [\"id\", \"ownerDatalist\"], [\"value\", \"John\"], [\"value\", \"Mary\"], [\"value\", \"Paul\"], [\"formControlName\", \"fault\", \"list\", \"faultDatalist\", 1, \"form-control\"], [\"id\", \"faultDatalist\"], [\"value\", \"Mouldy\"], [\"value\", \"Sour\"], [\"value\", \"Expired\"], [\"formControlName\", \"docNo\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"docDate\", \"type\", \"date\", 1, \"form-control\"], [\"formControlName\", \"resolved\", 1, \"form-select\"], [\"value\", \"true\"], [\"value\", \"false\"], [\"formControlName\", \"comment\", \"rows\", \"3\", \"maxlength\", \"255\", 1, \"form-control\"], [1, \"col-md-12\", \"mb-3\"], [\"type\", \"button\", 1, \"btn-outline-danger\", \"btn\", \"col-6\", 3, \"routerLink\"], [1, \"fa\", \"fa-cancel\"], [\"type\", \"submit\", 1, \"btn-outline-success\", \"btn\", \"col-6\"], [1, \"fa\", \"fa-save\"], [1, \"invalid-feedback\", \"d-block\"], [4, \"ngIf\"]],\n  template: function AddNewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r10 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Add New Return\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddNewComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"div\", 3)(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Customer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, AddNewComponent_div_10_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementStart(11, \"div\", 7);\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementStart(13, \"datalist\", 9);\n      i0.ɵɵelement(14, \"option\", 10)(15, \"option\", 11)(16, \"option\", 12)(17, \"option\", 13)(18, \"option\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 15);\n      i0.ɵɵtext(20, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(21, \"div\", 3)(22, \"div\", 4)(23, \"label\", 5);\n      i0.ɵɵtext(24, \"Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, AddNewComponent_div_25_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementStart(26, \"div\", 7);\n      i0.ɵɵelement(27, \"input\", 16);\n      i0.ɵɵelementStart(28, \"datalist\", 17);\n      i0.ɵɵelement(29, \"option\", 18)(30, \"option\", 19)(31, \"option\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"button\", 15);\n      i0.ɵɵtext(33, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(34, \"div\", 3)(35, \"div\", 21)(36, \"label\", 5);\n      i0.ɵɵtext(37, \"Qty on Document\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 21)(40, \"label\", 5);\n      i0.ɵɵtext(41, \"Qty Returned\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"input\", 23);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 3)(44, \"div\", 24)(45, \"div\", 25)(46, \"div\", 26)(47, \"span\", 27);\n      i0.ɵɵtext(48, \"No Batch Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"input\", 28, 29);\n      i0.ɵɵlistener(\"change\", function AddNewComponent_Template_input_change_49_listener() {\n        i0.ɵɵrestoreView(_r10);\n        const _r3 = i0.ɵɵreference(52);\n        ctx.toggleBatch();\n        return i0.ɵɵresetView(_r3.value = \"\");\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(51, \"input\", 30, 31);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(53, \"div\", 3)(54, \"div\", 4)(55, \"label\", 5);\n      i0.ɵɵtext(56, \"Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"div\", 7);\n      i0.ɵɵelement(58, \"input\", 32);\n      i0.ɵɵelementStart(59, \"datalist\", 33);\n      i0.ɵɵelement(60, \"option\", 34)(61, \"option\", 35)(62, \"option\", 36);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"button\", 15);\n      i0.ɵɵtext(64, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(65, \"div\", 3)(66, \"div\", 4)(67, \"label\", 5);\n      i0.ɵɵtext(68, \"Fault\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"div\", 7);\n      i0.ɵɵelement(70, \"input\", 37);\n      i0.ɵɵelementStart(71, \"datalist\", 38);\n      i0.ɵɵelement(72, \"option\", 39)(73, \"option\", 40)(74, \"option\", 41);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(75, \"button\", 15);\n      i0.ɵɵtext(76, \"+\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(77, \"div\", 3)(78, \"div\", 21)(79, \"label\", 5);\n      i0.ɵɵtext(80, \"External Document No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(81, AddNewComponent_div_81_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelement(82, \"input\", 42);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(83, \"div\", 21)(84, \"label\", 5);\n      i0.ɵɵtext(85, \"Document Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(86, AddNewComponent_div_86_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelement(87, \"input\", 43);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(88, \"div\", 3)(89, \"div\", 21)(90, \"label\", 5);\n      i0.ɵɵtext(91, \"Investigate / Resolved\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(92, \"select\", 44)(93, \"option\", 45);\n      i0.ɵɵtext(94, \"Resolved\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(95, \"option\", 46);\n      i0.ɵɵtext(96, \"Investigate\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(97, \"div\", 4)(98, \"label\", 5);\n      i0.ɵɵtext(99, \"Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(100, \"textarea\", 47);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(101, \"div\", 3)(102, \"div\", 48)(103, \"button\", 49);\n      i0.ɵɵelement(104, \"i\", 50);\n      i0.ɵɵtext(105, \" Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(106, \"button\", 51);\n      i0.ɵɵelement(107, \"i\", 52);\n      i0.ɵɵtext(108, \" Save\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(50);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.customer.invalid && (ctx.customer.touched || ctx.customer.dirty));\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(11, _c0));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.product.invalid && (ctx.product.touched || ctx.product.dirty));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(12, _c1));\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"readonly\", _r2.checked == true ? true : false);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(13, _c2));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(14, _c3));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.docNo.invalid && (ctx.docNo.touched || ctx.docNo.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.docDate.invalid && (ctx.docDate.touched || ctx.docDate.dirty));\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(15, _c4));\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddNewComponent","constructor","fb","returnService","router","appService","group","customer","required","product","qtyOnDoc","qtyReturned","batchDate","owner","fault","docNo","docDate","resolved","comment","ngOnInit","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Rowan\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\add-new\\add-new.component.ts","C:\\Users\\Rowan\\source\\repos\\Returns-ASP-project\\Returns-ASP-project\\ClientApp\\src\\app\\add-new\\add-new.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ReturnDto, ReturnRm } from '../api/models';\r\nimport { ReturnService } from '../api/services';\r\nimport { AppService } from '../app.service';\r\n\n@Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.css']\n})\nexport class AddNewComponent implements OnInit {\n\n  batchDateToggle = false;\n\n  constructor(private fb: FormBuilder, private returnService: ReturnService, private router: Router, private appService: AppService) { }\n\n  ngOnInit(): void {\n  }\n\n  form = this.fb.group({\r\n    customer: ['', Validators.required],\r\n    product: ['', Validators.required],\r\n    qtyOnDoc: [0],\r\n    qtyReturned: [0],\r\n    batchDate: [],\r\n    owner: [''],\r\n    fault: [''],\r\n    docNo: ['', Validators.required],\r\n    docDate: [,Validators.required],\r\n    resolved: [],\r\n    comment: ['']\r\n  })\r\n\r\n//  showToast = false;\r\n//  message = 'Something went wrong'\r\n\n\n//  toggleBatch() {\n//    this.batchDateToggle = !this.batchDateToggle;\r\n//  }\n\n//  save() {\r\n//    if (this.form.invalid) {\r\n//      this.form.markAllAsTouched()\r\n//      return\r\n//    }\r\n\r\n//    this.message = 'Return Saved'\r\n//    this.showToast = true\r\n\r\n//    const createdReturn: ReturnDto = {\r\n//      docDate: this.form.get('docDate')?.value!,\r\n//      customer: this.form.get('customer')?.value!,\r\n//      product: this.form.get('product')?.value!,\r\n//      qtyOnDoc: this.form.get('qtyOnDoc')?.value!,\r\n//      batchDate: this.form.get('batchDate')?.value!,\r\n//      owner: this.form.get('owner')?.value!,\r\n//      fault: this.form.get('fault')?.value!,\r\n//      docNo: this.form.get('docNo')?.value!,\r\n//      qtyReturned: this.form.get('qtyReturned')?.value!,\r\n//      resolved: JSON.parse(this.form.controls.resolved.value!),\r\n//      comment: this.form.get('comment')?.value!\r\n//    }\r\n\r\n\r\n\r\n//    this.returnService.createReturnReturn({ body: createdReturn }).subscribe(_ => { this.appService.setMessage(this.message); this.appService.showToast(this.showToast) }, this.handleError)\r\n//    this.router.navigate(['/search-returns'])\r\n//  }\n\n//  private handleError = (err: any) => {\r\n\r\n//    if (err.status == 404) {\r\n//      this.router.navigate(['/search-returns'])\r\n//    }\r\n\r\n//    console.log(\"Response Error. Status: \", err.status)\r\n//    console.log(\"Response Error. Status: \", err.statusText)\r\n//    console.log(err);\r\n//  }\n\n//  get customer() {\r\n//    return this.form.controls.customer\r\n//  }\r\n\r\n//  get product() {\r\n//    return this.form.controls.product\r\n//  }\n\n//  get docDate() {\n//    return this.form.controls.docDate\r\n//  }\n\n//  get docNo() {\n//    return this.form.controls.docNo\r\n//  }\n\n}\n\n","<h2>Add New Return</h2>\r\n<hr />\r\n\r\n<form [formGroup]=\"form\" (ngSubmit)=\"save()\">\r\n  <div class=\"center shadow-custom mb-3\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-12\">\r\n            <label class=\"form-label\">Customer</label>\r\n            <div *ngIf=\"customer.invalid && (customer.touched || customer.dirty)\" class=\"invalid-feedback d-block\">\r\n              <div *ngIf=\"customer.errors?.['required']\">Customer is required</div>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <input formControlName=\"customer\" class=\"form-control\" list=\"customerDataList\">\r\n              <datalist id=\"customerDataList\">\r\n                <option value=\"Spar\">\r\n                <option value=\"Checkers\">\r\n                <option value=\"Shoprite\">\r\n                <option value=\"Engen\">\r\n                <option value=\"Woolworths\">\r\n              </datalist>\r\n              <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/customer-detail']\" type=\"button\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-12\">\r\n            <label class=\"form-label\">Product</label>\r\n            <div *ngIf=\"product.invalid && (product.touched || product.dirty)\" class=\"invalid-feedback d-block\">\r\n              <div *ngIf=\"product.errors?.['required']\">Product is required</div>\r\n            </div>\r\n            <div class=\"input-group\">\r\n              <input formControlName=\"product\" class=\"form-control\" list=\"productDatalist\">\r\n              <datalist id=\"productDatalist\">\r\n                <option value=\"Milk\">\r\n                <option value=\"Bread\">\r\n                <option value=\"Eggs\">\r\n              </datalist>\r\n              <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/product-detail']\" type=\"button\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">Qty on Document</label>\r\n            <input formControlName=\"qtyOnDoc\" type=\"number\" min=\"0\" class=\"form-control\">\r\n          </div>\r\n\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">Qty Returned</label>\r\n            <input formControlName=\"qtyReturned\" type=\"number\" min=\"0\" class=\"form-control\">\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"input-group mb-3\">\r\n              <div class=\"input-group-text\">\r\n                <span class=\"me-3\">No Batch Date</span>\r\n                <input class=\"form-check-input mt-0\" type=\"checkbox\"  #batchChecked (change)=\"toggleBatch(); batchDateBox.value = ''\">\r\n              </div>\r\n              <input formControlName=\"batchDate\" type=\"date\" #batchDateBox [readonly]=\"batchChecked.checked == true ? true : false\" class=\"form-control\">\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-12\">\r\n            <label class=\"form-label\">Owner</label>\r\n            <div class=\"input-group\">\r\n              <input formControlName=\"owner\" class=\"form-control\" list=\"ownerDatalist\">\r\n              <datalist id=\"ownerDatalist\">\r\n                <option value=\"John\">\r\n                <option value=\"Mary\">\r\n                <option value=\"Paul\">\r\n              </datalist>\r\n              <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/owner-detail']\" type=\"button\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-12\">\r\n            <label class=\"form-label\">Fault</label>\r\n            <div class=\"input-group\">\r\n              <input formControlName=\"fault\" class=\"form-control\" list=\"faultDatalist\">\r\n              <datalist id=\"faultDatalist\">\r\n                <option value=\"Mouldy\">\r\n                <option value=\"Sour\">\r\n                <option value=\"Expired\">\r\n              </datalist>\r\n              <button class=\"btn btn-outline-secondary\" [routerLink]=\"['/fault-detail']\" type=\"button\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">External Document No.</label>\r\n            <div *ngIf=\"docNo.invalid && (docNo.touched || docNo.dirty)\" class=\"invalid-feedback d-block\">\r\n              <div *ngIf=\"docNo.errors?.['required']\">Document number is required</div>\r\n            </div>\r\n            <input formControlName=\"docNo\" type=\"text\" class=\"form-control\">\r\n          </div>\r\n\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">Document Date</label>\r\n            <div *ngIf=\"docDate.invalid && (docDate.touched || docDate.dirty)\" class=\"invalid-feedback d-block\">\r\n              <div *ngIf=\"docDate.errors?.['required']\">Document date is required</div>\r\n            </div>\r\n            <input formControlName=\"docDate\" type=\"date\" class=\"form-control\">\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"mb-3 col-6\">\r\n            <label class=\"form-label\">Investigate / Resolved</label>\r\n            <select formControlName=\"resolved\" class=\"form-select\">\r\n              <option value=true>Resolved</option>\r\n              <option value=false>Investigate</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-3 col-12\">\r\n          <label class=\"form-label\">Comment</label>\r\n          <textarea formControlName=\"comment\" class=\"form-control\" rows=\"3\" maxlength=\"255\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 mb-3\">\r\n            <button type=\"button\" [routerLink]=\"['/']\" class=\"btn-outline-danger btn col-6\"><i class=\"fa fa-cancel\"></i> Cancel</button>\r\n            <button type=\"submit\" class=\"btn-outline-success btn col-6\"><i class=\"fa fa-save\"></i> Save</button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n\r\n</form>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}